library(igraph)
get.all.shortest.paths
?get.all.shortest.paths
SP
sp
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
warnings()
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
u
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
p = "./../../../data/toyData/controls/withNoise/CTRL_dibernardo.gml"
g <- read.graph(p, format="gml")
g
e_list2 <- g_mstlist(g)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
pathg <- "./../../../data/toyData/cutted_controls/CTRL_barbatoa.gml"
pathg2 <- "./../../../data/toyData/cutted_controls/CTRL_amore.gml"
g <- read.graph(pathg, format="gml")
e_list <- g_mstlist(g)
frequency_list(g)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
e_list
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
m[90,80]
m+m
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
warnings()
p  <- "./../../../data/toyData/cutted_controls/withNoise/CTRL_barbatoa.gml"
p
g <- read.graph(pathg, format="gml")
g
e_list <- g_mstlist(g)
debugSource('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
m
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
m
max(m)
which.max(m)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
mt
which(mat == max(mc), arr.ind = TRUE)
which(m == max(mc), arr.ind = TRUE)
which(mc == max(mc), arr.ind = TRUE)
str(mc)
str(mc)
which(mc == max(mc), arr.ind = TRUE)
which(mc == max(mp), arr.ind = TRUE)
which(mp == max(mp), arr.ind = TRUE)
which(mp == max(mp), arr.ind = TRUE)
which(mp >= 5, arr.ind = TRUE)
which(mp >= 5, arr.ind = TRUE)
which(mp >= 5, arr.ind = TRUE)
which(mp >= 5, arr.ind = TRUE)
which(mp >= 5, arr.ind = TRUE)
which(mc >= 5, arr.ind = TRUE)
which(mp >= 5, arr.ind = TRUE)
which(mp >= 10, arr.ind = TRUE)
which(mc >= 5, arr.ind = TRUE)
which(mp >= 10, arr.ind = TRUE)
mt
which(mc >= max(mc), arr.ind = TRUE)\
which(mc >= max(mc), arr.ind = TRUE)
n <- which(mc >= max(mc), arr.ind = TRUE)
n[1]
n[2]
n[3]
n[1,1]
n[,1]
n[1,1]
n[1,2]
n <- which(mc >= 9, arr.ind = TRUE)
n <- which(mc >= 0, arr.ind = TRUE)
n
n <- which(mc >= 20, arr.ind = TRUE)
n
n <- which(mc >= 10, arr.ind = TRUE)
n
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
kc <- findFirstK(mc, 400)
kc
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
mc <- applyFrequency("./../../../data/toyData/controls/withNoise/")
kc <- findFirstK(mc, 400)
kp <-findFirstK(mp, 400)
kc
which(kp > 0), arr.ind = TRUE)
which(kp > 0, arr.ind = TRUE)
edgesLeft <- kc - kp
edgesRight <- kp - kc
which(edgesLeft > 0, arr.ind = TRUE)
which(edgesRight > 0, arr.ind = TRUE)
which(edgesLeft > 0, arr.ind = TRUE)
which(edgesLeft > 0, arr.ind = TRUE)
common <- kc + kp
which(common > 1, arr.ind = TRUE)
500 - 264
hist(kc)
hist(mp)
hist(mc)
400 - 264
400 - 136
