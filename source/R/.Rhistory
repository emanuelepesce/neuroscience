outBorda1
as.list(outBorda$TopK)
as.list(outBorda1$TopK)
outBorda1=Borda(input)
utBorda2=Borda(input,space=input)
as.list(utBorda1$TopK)
as.list(utBorda2$TopK)
outBorda=Borda(input)
outBorda
outBorda=Borda(input, k = 10)
outBorda
input
outBorda=Borda(input)
outBorda
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
=Borda
?Borda
outBorda$TopK
input
outBorda$TopK$mean
as.list(outBorda$TopK)
input
data(input)
library(TopKLists)
outBorda=Borda(input,space)
outBorda=Borda(input)
set.seed(1234)
L1=paste("Obj",1:30,sep="")
L2=paste("Obj",c(1:10,31:40,11:15),sep="")
L3=paste("Obj",c(1:10,16:20,11:15),sep="")
input=list(L1,L2,L3)
space1=space2=space3=paste("Obj",1:40,sep="")
space=list(space1,space2,space3)
L1
L2
outBorda=Borda(input,space)
?sort
input
data(input)
set.seed(1234)
L1=paste("Obj",1:30,sep="")
L2=paste("Obj",c(1:10,31:40,11:15),sep="")
L3=paste("Obj",c(1:10,16:20,11:15),sep="")
input=list(L1,L2,L3)
L
input
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
mControls
length(mControls[1])
length(mControls[2])
length(mControls[1,1])
length(mControls[1:])
length(mControls[1:]])
length(mControls[1,1]])
mControl[1]
mControls[1]
)
length(mControls[1])
length(mControls[1])
dim(mControls[1])
str(mControls)
dim(mControls[1][1])
dim(mControls[[1]])
length(mControls[[1]])
length(mControls[[10]])
90*90
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
a = "a"
b="b"
l = list()
c(l,a)
c(l,b)
l
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
l
l = c(1,2)
l
l <- c(l, 3)
l
l = c("1","2")
l
l <- c(l, "3"")
l <- c(l, "3")
l <- c(l, "3")
l
toString(1)
uno <- toString(1)
uno
due <- toString(2)
due
ud <- paste(uno,due)
ud
ud <- paste(uno,due, sep="")
ud <- paste(uno,due, sep="_")
ud
genMatrix()
genMatrix()
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
genMatrix()
genMatrix()
genMatrix()
1:90
genMatrix()
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
mControls
mControls[[1]]
mControls[[1]]
v <- c(1:10)
names(v) <- c(20:30)
names(v) <- c(21:30)
v
sort(v)
sort(v, decreasing = TRUE)
names(v)
a <-sort(v, decreasing = TRUE)
a
names(a)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
outBorda
outBorda$TopK
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
outBorda$TopK
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
outBorda$TopK
outBorda$Scores
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
outBorda$TopK
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
outBorda$TopK
B = matrix(
+   c(2, 4, 3, 1, 5, 7),
+   nrow=3,
+   ncol=2)
B = matrix( c(2, 4, 3, 1, 5, 7),  nrow=3,    ncol=2)
B
B = matrix( c(1:6),  nrow=3,    ncol=2)
B
B = matrix( c(1,3,5,2,4,6),  nrow=3,    ncol=2)
B
V <- as.vector(B)
V
V <- as.vector(t(B))
V
B = matrix( c(1:9),  nrow=3,    ncol=3)
B
V <- as.vector(t(B))
V
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
outBorda$Scores
outBorda$TopK
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
outBorda$TopK
outBorda$Scores
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
outBorda$TopK$mean)
outBorda$TopK$mean
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
outBorda$Scores$mean
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
x = outBorda$Scores$mean
screeplot(x)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
outBorda$TopK
outBorda$TopK$mean
length(outBorda$TopK$mean)
length(c(1:10))
v = outBorda$Scores$mean7
v = outBorda$Scores$mean
v[1:10]
v = outBorda$Scores
v
rev(v[1:10])
rev(0,v[1:10])
rev(c(0, v[1:10]))
View(v)
View(v)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
x = outBorda$TopK
X
x
x$mean
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
v
e
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
nv
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
s <- "1_2"
strsplit(s, "_")
r = strsplit(s, "_")
r[1]
r[[1]]
r[[2]]
r[2]
str(r)
r[1]
r[1][2]
r[1][1]
r[1,1]
r[2]
r[[1]][2]
r[[1]][1]
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
graph
graph[1][1]
graph[1][2]
graph[1][3]
graph[1][6]
graph[1,1]
graph[1,2]
graph[1,3]
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
e <- outBorda$TopK$mean
e
e <- outBorda$TopK$mean[1:10]
e
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
listNames[1]
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
edges
edges[[1]]
edges[[2]]
source('~/.active-rstudio-document', echo=TRUE)
v
e
source('~/.active-rstudio-document', echo=TRUE)
e
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
e
edges
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
?sort
a = seq(1:10)
a
sort(a, decreasing = TRUE)
a = a/10
a
sort(a, decreasing = TRUE)
order(a)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
sort(edges, decreasing = TRUE)
edges
e <- unlist(edges)
sort(e, decreasing = TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
graph
min(graph)
max(graph)
mean(graph)
hist(graph, break=200)
hist(graph, breaks=200)
plot(as.numeric(density(graph)))
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
plot(as.vector(density(graph)))
graph2 <- graph
graph2[graph2<0.1] = 0
plot(as.vector(density(graph2)))
colSum(graph2)
colSums(graph2)
cs <- colSums(graph2)
cs <- which(cs == 0)
cs
cs <- which(cs < 0.1)
cs
cs <- colSums(graph2)
cs <- which(cs < 0.1)
length(cs)
graph2
cs <- which(cs < 0.2)
cs
cs <- colSums(graph2)
graph2 <- graph
graph
graph2 <- graph
grap2 <- graph2*5000
grap2
plot(y = as.vector(sort(grap2)[1:300], decreasing = TRUE), x = seq(1:300), type='b', main = 'screeplot', xlab = 'edges', ylab = 'mean')
plot(y = as.vector(sort(grap2[1:300], decreasing = TRUE)), x = seq(1:300), type='b', main = 'screeplot', xlab = 'edges', ylab = 'mean')
plot(y = (sort(as.vector(grap2), decreasing = TRUE)[1:300]), x = seq(1:300), type='b', main = 'screeplot', xlab = 'edges', ylab = 'mean')
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
g
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
V(graph)
V(g)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
sp
R
R$nrgeo
?get.all.shortest.paths
R$res
count(V(graph))
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
R$res
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
R
View(R)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
sp
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
sp
R
R$res
R$res[[1]]
l <- list()
l[1] <- R$res
l[1]<- R$res[1]
R$res[1]
R$res[2]
R$res[3]
R$res[[3]]
l <- list(R$res, R$res)
l
l1 <- list(l, R$res)
l1
l <- list(R$res, R$res)
l
l <- list(R$res)
l
l <- list(l, list(R$res)
)
l
l <- list(l, list(R$res)
)
l
l <- list(R$res)
l <- list(l, R$res)
l
l <- list(l, R$res)
l
l <- list(R$res)
l <- list(l, R$res)
l
l <- list(l, list(R$res))
l
l <- list(R$res)
l
l <- list(l, list(R$res))
l
l <- list(l, list(R$res))
l
l <- list(l, list(R$res))
l
l <- list(R$res)
l <- append(l, R$res))
l <- append(l, R$res)
l <- list(R$res)
l <- append(l, list(R$res))
l
l <- append(l, list(R$res))
l
length(l)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
sp
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
R
R[1]
R[1][1]
R[1][1][1]
R[1][1,1]
R[1][1]
R[1][1]
R[1][2]
R[1]
R[1]
R$res
R$res[1]
R$res[1][1]
R$res[2]
R$res[3]
R$res[3][1]
R$res[3][2]
R$res[3]
R$res[3,1]
R$res[3,1]
R$res[3]
R$res[3][1]
R$res[3][1][¹]
R$res[3][1][1]
R$res[3]
R$res[[1]]
R$res[[2]]
R$res[[2]][1]
R$res[[2]][2]
R$res[[2]][3]
length(R$res)
R$res[[2]]
R$res[[3]]
l <- list()
l$a <- 1
l
l$a <- 1
l
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
warnings()
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
install.packages(hash)
install.packages("hash)
install.packages("hash")
library(hash)
hash( 1:3, lapply(1:3, seq, 1 ))
hash()
h <- hash()
h
h$a <- 1
h
h$1 <- 1
h <- hash()
h$1 <- 1
h <- hash()
h[[1]]
h[[1]] <- 1
h$"1" <- 1
h
v_util <- hash(1:90)
v_util <- hash(1:90, 1:90)
v_util
h = hash(1:90,lapply(1:90, seq, 1))
h
