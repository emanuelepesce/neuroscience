get.edge.ids(g, c(1,2))
get.edge(graph, 1)
get.edge(g, 1)
incident(graph, v, mode=c("all", "out", "in", "total"))
incident(g, v, mode=c("all", "out", "in", "total"))
incident(g, 1, mode=c("all", "out", "in", "total"))
a  = incident(g, 1, mode=c("all", "out", "in", "total"))
a[1]
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
c_outBorda
c_outBorda$TopK
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
c_outBorda$TopK
p_outBorda
c_outBorda
c_outBorda$TopK
?Borda
Borda.plot(c_outBorda)
Borda.plot(c_outBorda$TopK)
Borda.plot(c_outBorda)
Borda.plot(c_outBorda, k = 20)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
R$residualGraph
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/experiments/exp_edgeThresholdPruning.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
sC <- seq(limInf, limSup, by=step)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
R
R$residualGraph
g <- R$residualGraph
get.edges(g)
get.edges(g, es)
get.edge.ids(g)
get.edgelist(f)
get.edgelist(g)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
get.edgelist(g)
a = get.edgelist(g)
a[1]
a[1][2]
a[2]
a[1,:]
a[1:]
a[1]
a[1,1]
a[1,2]
a[1,3]
a[2,1]
a[2,2]
a[2,3]
a[1,3]
a[1,3]
a = get.edgelist(g)
a
a[5000,2]
a[5000,1]
a[5000,1] == a[5000,2]
a[1,1] == a[1,2]
a$1
l = list()
l[1] == "v"
l[1,1] == "v"
l[1,1] = "v"
str(a)
dim(a)
matrix(2)
matrix(1,2)
matrix(2,2)
matrix(nrow = 1, ncol = 2)
l
l[1]
l <- list()7
l <- list()
l[ยน]
l[1]
l[1] = 1
l
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
residual_C
get.edges(residual_C)
get.edgelist(residual_C)
a = get.edgelist(residual_C)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
a
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
length(edgesC)
length(a)
a = get.edgelist(residual_C)
length(a)
a[1190,1]
a[1189,1]
a[1190,1]
a
length(a)
a
length(a)[1]
a
dim(a)
dim(a)[ยน]
dim(a)[1]
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
r
r[1]
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
r
r
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
r
r
r[1]
r[2]
r[-2]
b = [1,2]
b = c(1,2)
r[-b]
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
a
a[-1]
a
a[1]
a[-1,:]
a[-1]
a[-1,-1]
a[[1]]
a$1
a$[1]
a[1]
a
a[-1189,-1:-2]
a[-1189]
a
a[-1189,:]
a[-1189:]
a[-1189,]
a
b (1189, 1188)
b= c(1189, 1188)
b
a[-b,]
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
edgesU <-  matrix(nrow = 1, ncol = 2)
edgesU
b
edgesU[1,1]
insertRow(edgesU, 2, 5:6 )
library8(miscTools)
library(miscTools)
install.packages(miscTools)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R')
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
10:15
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
matrix()
m <- matrix(nrow = 2, ncol = 2)
m[1,1] = 1
m
m[1,1] = "1"
m
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
10:15
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
n_row
debugSource('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
M
R
R
r
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
Q
Q
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
print(RC$n_residualEdges)
print(RC$n_residualEdges)
print(length(r))
print(RC$n_residualEdges)
print(RP$n_residualEdges)
print(length(r))
print(length(r) - RC$_residualsEdges)
print(length(r) - RC$n_residualsEdges)
print(length(r) - RC$n_residualsEdges)
print("Edges in Controls")
print(RC$n_residualEdges)
print("Edges in Patients")
print(RP$n_residualEdges)
print("Edges in Union")
print(length(r))
print("Different edges")
print(length(r) - RC$n_residualsEdges)
3296 - 1189
1189 + 1634
a = length(r)
a
b = RC$n_residualsEdges
b
RC
RC$n_residualEdges
print(length(r) - RC$n_residualEdges)
debugSource('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
m
debugSource('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
m
debugSource('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
print(dim(r)[1] - RP$n_residualEdges)
rint("Union - Patients")
print("Union - Controls")
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
out
write.csv(out, file = "info_maskUnion")
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
write.csv(r, file = "edgesMask.csv")
?write.csv
write.table(r, file = "edgesMask.csv", )
write.csv(r, file = "edgesMask.csv")
read.csv("edgesMask.csv")
x = read.csv("edgesMask.csv")
x
?read.csv
x = read.csv("edgesMask.csv", col.names = FALSE)
x = read.csv("edgesMask.csv", col.names = False)
x = read.csv("edgesMask.csv")
x = read.table("edgesMask.csv", col.names = False)
x = read.table("edgesMask.csv", header = false)
x = read.table("edgesMask.csv", header = FALSE)
x
write.csv(r, file = "edgesMask.csv")
x = read.table("edgesMask.csv", header = FALSE)
x
x = read.table("edgesMask.csv", header = TRUE)
X
x
x
x = read.csv("edgesMask.csv", header = TRUE)
x
x = read.csv("edgesMask.csv", header = FALSE)
x
r
x = read.csv("edgesMask.csv")
x
x[1]
x[2]
x[3]
write.csv(out, file = "info_maskUnion.csv", row.names = FALSE)
x = read.csv("edgesMask.csv")
x
write.table(out, file = "info_maskUnion.csv", row.names = FALSE)
write.csv(r, file = "edgesMask.csv", row.names = FALSE)
x = read.csv("edgesMask.csv")
x
x[1]
x[2]
r
r[ยน]
r[1]
r[2]
r[3]
r[1,1]
r[1,2]
r[1,3]
r[2,1]
x
x[1]
x[1,1]
x[1,2]
x
x[[1]]
x[1][1]
x[1]
x[1,1]
source('~/Tesi/gitProject/neuroscience/source/R/extractMask.R', echo=TRUE)
read.csv("edgesMasj.csv", row.names = FALSE)
read.csv("edgesMasj.csv")
read.csv("edgesMask.csv")
x = read.csv("edgesMask.csv")
x
x[1]
x = read.csv("edgesMask.csv")
x[1][1]
x[1,1]
write.matrix(r, file = "f.txt", sep = " ")
library(mass)
install.packages("MASS")
library(MASS)
write.matrix(r, file = "f.txt", sep = " ")
read.matrix(file = "f.txt")
read.table("f.txt")
x = read.table("f.txt")
x[ยน]
x[1]
x[1,1]
r
r[1]
r[2]
r[1,2]
write.csv(r, file = "edgesMask.csv", row.names = FALSE, sep = " ")
write.csv(r, file = "edgesMask.csv", row.names = FALSE, sep = ",")
write.csv(out, file = "info_maskUnion.csv")
write.table(r,file="edgesMask.csv",sep="\t", col.names = F, row.names = F)
read.table("outfile",header=TRUE,sep= "\t")
x = read.table("edgesMask.csv",header=TRUE,sep= "\t")
x
x[ยน]
x[1]
x[2]
x[1,1]
as.matrix(a)
as.matrix(x)
x[1]
m = as.matrix(x)
m[1]
write.table(r,file="edgesMask.csv", col.names = F, row.names = F)
t
write.table(r,file="edgesMask.csv",sep="\t", col.names = F, row.names = F)
read.csv(file = "./../../data/toyData/results/1_maskUnion.csv")
read.csv(file = "./../../data/toyData/results/1_maskUnion.csv")
read.csv(file = "./../../data/toyData/results/1_maskUnion.csv")
read.csv(file = "./../../data/toyData/results/1_maskUnion/edgesMask.csv")
mask <- as.matrix(mask)
mask <- read.csv(file = "./../../data/toyData/results/1_maskUnion/edgesMask.csv")
mask <- as.matrix(mask)
mask
mask[ยน]
mask[1]
g <- i_adjacencyFromFile("./../../data/toyData/controls/CTRL_amore")
g <- i_adjacencyFromFile("./../../data/toyData/controls/CTRL_amore.txt")
g
list.edges(g)
get.edgeslist(g)
library(igraph)
get.edgelist(g)
g <- i_adjacencyFromFile("./../../data/toyData/controls/CTRL_amore.txt")
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
get.edgeslist(g)
get.edgelist(g)
a = get.edgelist(g)
a[1]
a[1,1]
a[1,2]
dim(a)[1]
mask
dim(mask)[1]
applyMask(g,mask)
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
gm <- applyMask(g,mask)
gm
get.edgelist(gm)
mask
get.edgelist(gm)
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
get.edgelist(gm)
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
get.edgelist(gm)
debugSource('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
edgesToRmv
length(edgesToRmv)
mask
get.edgelist(m)
get.edgelist(g)
l = get.edgelist(g)
l[1,1]
l[1,1] == "V1"
mask[1,1]
mask[1,1] == l[1,1]
mask
debugSource('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
edgeToRmv
edgesToRmv
length(edgesToRmv) + m_edges
print("hello")
debugSource('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
Q
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
g
g["V1", "V2"]
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
gm
gm["V1", "V2"]
l = get.edgelist(gm)
l
add.edges(g, "V1", "V2")
?add.edges
g["V1", "V2", attr="weight"] <- 1
get.edgelist(g)
get.edgelist(gm)
gm["V1", "V2", attr="weight"] <- 1
get.edgelist(gm)
gm["V1", "V2", attr="weight"] <- 2
g["V1", "V2"]$wight
g["V1", "V2"]$weight
E(g["V1", "V2"])$weight
E(gm)$weight
g["V1", "V2"]
gm["V1", "V2"]
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
gm
E(gm)
mask
gm["V90", "V87"]
gm["V90", "V53"]
gm["V90", "V87"]
debugSource('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
v1
v2
graph[v1, v2]
g[v1, v2, attr="weight"] <- graph[v1, v2]
g
E(g)
mask
mask[1,2]
E(g)
g[v1,v2]
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
E(gm)
E(gm)$weight
gm["V90", "V87"]
g["V90", "V87"]
mask
gm
E(gm)
mask
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
ist.files(path = ".", pattern = NULL, all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
list.files(path = ".", pattern = NULL, all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
a list.files(path = ".")
a = list.files(path = ".")
aa
a
a[ยน]
a[1]
length(a)
applyMaskDirectory <- function("./../../data/toyData/controls/", ".")
applyMaskDirectory("./../../data/toyData/controls/", ".")
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
path
a = "string"
a
gsub("s", "", a)
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
applyMaskDirectory("./../../data/toyData/patients/", "./../../data/toyData/cutted_patients/")
source('~/Tesi/gitProject/neuroscience/source/R/applyMask.R', echo=TRUE)
