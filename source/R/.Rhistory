!is.na(sp$res[[i]][j])
if(!is.na(sp$res[[i]][j])){}
if(!is.na(sp$res[[i]][j])){}
if(!is.na(sp$res[[i]][j])){print("gello")}
if(!is.na(sp$res[[i]][j])){
vj <- sp$res[[i]][j]
vk <- sp$res[[i]][j+1]}
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
vj
i
j
j+1
is.na(sp$res[[i]][j])
(!is.na(sp$res[[i]][j]))
if(!is.na(sp$res[[i]][j])){}
if(!is.na(sp$res[[i]][j])){
vj <- sp$res[[i]][j]
vk <- sp$res[[i]][j+1]
if (!is.na(vk)){
if (!( vk %in% v_util[[vj]] )){
v_util[[vj]] <- c(v_util[[vj]], vk)
}
}
else{ print(vk)}
}
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
i
j
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
i
j
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
i
j
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
i
j
i
j
sp$res[[i]][j])
sp$res[[i]][j]
is.na(sp$res[[i]][j])
(!is.na(sp$res[[i]][j]))
if(!is.na(sp$res[[i]][j])){}
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
R
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
R
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
sp
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
R
getEdges(g)
get.edges(g)
edges(g)
edges(g)
e <- edges(g)
e
n <- nodes(g)
n <- vertices(g)
n
n[1]
n[[1]]
n[1][1]
n[1][2]
n[1]
v <- vertices(g)
e <- edges(g)
get.vertex.attribute(graph, name, index=V(graph))
get.vertex.attribute(g, name, index=V(graph))
get.vertex.attribute(g, name, index=V(g))
get.vertex.attribute(g, "1", index=V(g))
get.edges(1:6)
get.edges(g,1:6)
get.edges(g,1:90)
get.edges(g,1:10000)
V(graph)
V(g)
E(g)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
} # end v
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
R$v_util
R$toRemove
R$toRemove[[90]]
R$v_util[[90]]
R$v_util[[88]]
toString(1)
paste("V", sv1, sep = "")
sv1 = toString(1)
paste("V", sv1, sep = "")
V[g]
V[g]
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
V(g)
E(g)
e <- E(g)
e
e[ยน]
e[1]
e[1]
e[1][1]
e[1][2]
e[2]
e[2]
e[1]
V[g]
source('~/.active-rstudio-document', echo=TRUE)
V[g]
V[graph]
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
V(graph)
V(g)
sv1
sv2
debugSource('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
g
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
E(g1)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
R$g_cut
E(g_cut)
E(R$g_cut)
get.graph.attribute(graph = g1)
get.graph.attribute(graph = g1, name = "weights")
E(g)
E(g)$weights
E(g)$weight
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
ne_weights
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R')
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R')
gc <- R$g_cut
r <- R$toRemove
r
E(gc)
r[90]
r[89]
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
gc <- R$g_cut
E(gc)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
gc <- R$g_cut
E(gc)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
f <- (ni+nj)/2*vcount(graph) # fraction of neighbors in util
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
print(f)
4/5
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
print(f)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
E(g)
7006 - nr
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
r
90*90
8100 - nr
7006 - nr
3017 + 90
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
util
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
gc
E(gc)$weight
w <- E(gc)$weight
w
w
hist(w)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
hist(w)
w <- E(gc)$weight
hist(w)
hist(E(g)$weight)
hist(E(g)$weight, breaks = 50)
hist(E(g)$weight, breaks = 20)
hist(w, breaks = 20)
hist(w, breaks = 20, ylim = c(0, 6000))
hist(w, breaks = 20, ylim = c(0, 7000))
hist(E(g)$weight, breaks = 20. ylim=c(0,7000))
hist(E(g)$weight, breaks = 20, ylim=c(0,7000))
par(mfrow = c(1,2))
hist(E(g)$weight, breaks = 20, ylim=c(0,7000))
hist(w, breaks = 20, ylim = c(0, 6000))
par(mfrow = c(1,2))
hist(w, breaks = 20, ylim = c(0, 7000))
hist(E(g)$weight, breaks = 20, ylim=c(0,7000))
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
E(g)
7006 - nr
ans
ans()
3005 + n_util
3763 - 180
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
7006 - 3911 + 668
3763 - 90
util
z = 0
z++
;
z += 1
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
8190 - 668
8100 - 668
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
8100 - 668
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
8100 - 668
7432 + 90
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
758 - 90
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
7006 - 3911
3095 + 90
7006 - nr - 90
7006 - nr
7006 - nr + 90
7006 - nr + 90
3697 - 7006
3697 -  3095
3697 - 668
7006 - 3697
3911 - 3309
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
7006 - 668 +90
7006 - nr
r
nr
nr - 90
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
r
util
util
util
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
ecount(g)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
E(gc)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
lgc + nc
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
outBorda$Scores
length(0outBorda$Scores)
length(outBorda$Scores)
length(outBorda$Scores[1])
length(outBorda$Scores$mean)
outBorda$TopK
?Borda
r <- outBorda$TopK$mean
s <- outBorda$Scores$mean
names(s)
s
s[1]
s[2]
s[3]
r[1]
names(s) <- r
s
rr
r
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
r <- outBorda$TopK$mean
s <- outBorda$Scores$mean
names(s) <- r
s
r
s
o <- sort(names(s))
o
names(r) <- s
r
sort(r)
s$1_2
s[1]
names(s)
s["1_2"]
a = s["1_2"]
a
a = s$1_2
a = s$"1_2
""
""""
a = s$"1_2"
a = s$'1_2'
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
for(j in 1:n){
idx <- paste(toString(i), toString(j), sep = "_")
print(idx)
vec(idx)
}
vec["1_2"]
M[1,1]
debugSource('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
M
debugSource('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
a = outBorda$Scores$mean
a[1]
b = outBorda$TopK$mean
b[1]
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
E(g)
E(gc)
gc
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/experiments/edgeThresholdPruning.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
e_weights <- E(graph)$weight
ne_weights <- (e_weights-min(e_weights))/(max(e_weights)-min(e_weights))
ne_weights <- 1-ne_weights
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
print((graph)$weight)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
gc
util
r
print("Number of utils edges:")
n_util <- 0
for (i in 1:length(util)){
n_util <- n_util + length(util[[i]])
}
print(n_util-90)7
print("Number of utils edges:")
n_util <- 0
for (i in 1:length(util)){
n_util <- n_util + length(util[[i]])
}
print(n_util-90)
print("Number of utils edges:")
r <- 0
for (i in 1:length(util)){
n_r <- r + length(r[[i]])
}
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/experiments/edgeThresholdPruning.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
get.edge.ids(g, c(1,2))
get.edge.ids(g, c(1,2))$weight
get.edge.ids(g, c(1,2))
get.edge.ids(g, c(1,1))
get.edge.ids(g, c(1,3))
get.edge.ids(g, c(1,2))
get.edge.attribute(2, attribute)
get.edge.attribute(2, "weight")
get.edge.attribute(2, name = "weight")
edge.attributes(g)
edge.attributes(g)[1]
edge.attributes(g)[1,1]
edge.attributes(g)[1]
edge.attributes(g)[[1]
]
edge.attributes(g)[[1]]
list.edge.attributes(graph)
list.edge.attributes(g)
get.edge.attribute(2, name = "weight")
get.edge.attribute(g, 2, name = "weight")
get.edge.attribute(8100, 2, name = "weight")
get.edge.attribute(g, 8100, name = "weight")
get.edge.ids(g, c(1,1))
get.edge.attribute(g, 1, name = "weight")
get.edge.ids(g, c(1,2,3,5))
get.edge.ids(g, c(1,2))
get.edge(graph, 1)
get.edge(g, 1)
incident(graph, v, mode=c("all", "out", "in", "total"))
incident(g, v, mode=c("all", "out", "in", "total"))
incident(g, 1, mode=c("all", "out", "in", "total"))
a  = incident(g, 1, mode=c("all", "out", "in", "total"))
a[1]
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
c_outBorda
c_outBorda$TopK
source('~/Tesi/gitProject/neuroscience/source/R/aggregationBorda.R', echo=TRUE)
c_outBorda$TopK
p_outBorda
c_outBorda
c_outBorda$TopK
?Borda
Borda.plot(c_outBorda)
Borda.plot(c_outBorda$TopK)
Borda.plot(c_outBorda)
Borda.plot(c_outBorda, k = 20)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
R$residualGraph
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/experiments/exp_edgeThresholdPruning.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
sC <- seq(limInf, limSup, by=step)
