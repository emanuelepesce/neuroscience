h
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
else{
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
}else{
#         else{
#           v_util[[i]] <- c(v_util[[i]], sp$res[[i]][j])
#         }
} else{
#           v_util[[i]] <- c(v_util[[i]], sp$res[[i]][j])
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
v_util
h
length(h[[1]])
h[[1]] <- c(h[[1]], "Due")
h
length(h[[1]])
sp
sp$res
sp$res[[1]]
sp$res[[90]]
sp$res[[90]][1]
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
length(v_util[1])
length(v_util[2])
length(v_util[3])
length(v_util[[3]])
length(v_util[[1]])
is.null(v_util[["a"]])
is.null(v_util[[1]])
is.null(v_util[[1]])
is.null(v_util[[1]])
is.null(v_util$1)
is.null(v_util$'1')
h$'1'
h
exist(h[[1]])
exists(h[[1]])
h[[1]]
exists(1, h)
exists(1, h[[1]])
exists(1, where=h)
is.null(h[Ã¨1])
is.null(h[1])
is.null(h[[1]])
h[1]
h <- list
h <- list()
h
h[1] <- "uno"
h[1] <- c(h[1],"due")
h[[1]] <- c(h[1],"due")
h
h[[1]] <- c(h[[1]],"due")
h
h <- list()
h[[1]] <- "uno"
h
h[[1]] <- c(h[[1]],"due")
h
is.null[h[1]]
is.null(h[1])
is.null(h[2])
is.null(h[3])
is.null(h[[2]])
is.null(h[[1]])
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
v
v_util
1:length(90)
seq(1:length(90))
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
warnings()
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
sp
sp
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
sp
sp
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
v_util
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
v_util
vk
vk<- sp$res[[i]][k]
vk
if (!( vk %in% v_util[[vj]] )){}
v_util[vj]
vj
i
k
j
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
j
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
R
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
vj
v_util[vj]
vk %in% v_util[vj]
vk %in% v_util[[vj]]
vk
vk<- sp$res[[i]][k]
vk %in% v_util[[vj]]
v_util[vj]
v_util[[vj]] <- c(v_util[[vj]], vk)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
v_util
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
vk
vj
j
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
seq(1,0)
seq(1,-1)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
R
R[[1]]
length(R[[1]])
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
R
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
R
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
j
k
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
vk
j
k
vj
vk
sp$res[[i]]
is.null[[i]][2]
is.null[[i]][1]
is.null[[i]][2])
is.null([[i]][2])
is.null(sp$res[[i]])
is.null(sp$res[[1]])
is.null(sp$res[[2]])
is.null(sp$res[[1]][1])
is.null(sp$res[[1]][2])
j
i
is.na(sp$res[[1]][2])
is.na(sp$res[[1]][1])
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
i
j
j+1
vj
sp$res[[i]][j]
is.na(sp$res[[i]][j])
!is.na(sp$res[[i]][j])
if(!is.na(sp$res[[i]][j])){}
if(!is.na(sp$res[[i]][j])){}
if(!is.na(sp$res[[i]][j])){print("gello")}
if(!is.na(sp$res[[i]][j])){
vj <- sp$res[[i]][j]
vk <- sp$res[[i]][j+1]}
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
vj
i
j
j+1
is.na(sp$res[[i]][j])
(!is.na(sp$res[[i]][j]))
if(!is.na(sp$res[[i]][j])){}
if(!is.na(sp$res[[i]][j])){
vj <- sp$res[[i]][j]
vk <- sp$res[[i]][j+1]
if (!is.na(vk)){
if (!( vk %in% v_util[[vj]] )){
v_util[[vj]] <- c(v_util[[vj]], vk)
}
}
else{ print(vk)}
}
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
i
j
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
i
j
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
i
j
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
i
j
i
j
sp$res[[i]][j])
sp$res[[i]][j]
is.na(sp$res[[i]][j])
(!is.na(sp$res[[i]][j]))
if(!is.na(sp$res[[i]][j])){}
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
R
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
R
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
sp
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
R
getEdges(g)
get.edges(g)
edges(g)
edges(g)
e <- edges(g)
e
n <- nodes(g)
n <- vertices(g)
n
n[1]
n[[1]]
n[1][1]
n[1][2]
n[1]
v <- vertices(g)
e <- edges(g)
get.vertex.attribute(graph, name, index=V(graph))
get.vertex.attribute(g, name, index=V(graph))
get.vertex.attribute(g, name, index=V(g))
get.vertex.attribute(g, "1", index=V(g))
get.edges(1:6)
get.edges(g,1:6)
get.edges(g,1:90)
get.edges(g,1:10000)
V(graph)
V(g)
E(g)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
} # end v
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
R$v_util
R$toRemove
R$toRemove[[90]]
R$v_util[[90]]
R$v_util[[88]]
toString(1)
paste("V", sv1, sep = "")
sv1 = toString(1)
paste("V", sv1, sep = "")
V[g]
V[g]
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
V(g)
E(g)
e <- E(g)
e
e[Â¹]
e[1]
e[1]
e[1][1]
e[1][2]
e[2]
e[2]
e[1]
V[g]
source('~/.active-rstudio-document', echo=TRUE)
V[g]
V[graph]
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
V(graph)
V(g)
sv1
sv2
debugSource('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
g
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/graphUtils.R', echo=TRUE)
E(g1)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
R$g_cut
E(g_cut)
E(R$g_cut)
get.graph.attribute(graph = g1)
get.graph.attribute(graph = g1, name = "weights")
E(g)
E(g)$weights
E(g)$weight
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
ne_weights
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R')
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R')
gc <- R$g_cut
r <- R$toRemove
r
E(gc)
r[90]
r[89]
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
gc <- R$g_cut
E(gc)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
gc <- R$g_cut
E(gc)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
f <- (ni+nj)/2*vcount(graph) # fraction of neighbors in util
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
print(f)
4/5
debugSource('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
print(f)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
E(g)
7006 - nr
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
r
90*90
8100 - nr
7006 - nr
3017 + 90
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
util
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
gc
E(gc)$weight
w <- E(gc)$weight
w
w
hist(w)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
hist(w)
w <- E(gc)$weight
hist(w)
hist(E(g)$weight)
hist(E(g)$weight, breaks = 50)
hist(E(g)$weight, breaks = 20)
hist(w, breaks = 20)
hist(w, breaks = 20, ylim = c(0, 6000))
hist(w, breaks = 20, ylim = c(0, 7000))
hist(E(g)$weight, breaks = 20. ylim=c(0,7000))
hist(E(g)$weight, breaks = 20, ylim=c(0,7000))
par(mfrow = c(1,2))
hist(E(g)$weight, breaks = 20, ylim=c(0,7000))
hist(w, breaks = 20, ylim = c(0, 6000))
par(mfrow = c(1,2))
hist(w, breaks = 20, ylim = c(0, 7000))
hist(E(g)$weight, breaks = 20, ylim=c(0,7000))
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
E(g)
7006 - nr
ans
ans()
3005 + n_util
3763 - 180
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
7006 - 3911 + 668
3763 - 90
util
z = 0
z++
;
z += 1
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
8190 - 668
8100 - 668
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
8100 - 668
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
8100 - 668
7432 + 90
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
758 - 90
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
7006 - 3911
3095 + 90
7006 - nr - 90
7006 - nr
7006 - nr + 90
7006 - nr + 90
3697 - 7006
3697 -  3095
3697 - 668
7006 - 3697
3911 - 3309
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
7006 - 668 +90
7006 - nr
r
nr
nr - 90
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
r
util
util
util
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
ecount(g)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
E(gc)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/pruningEdges.R', echo=TRUE)
lgc + nc
