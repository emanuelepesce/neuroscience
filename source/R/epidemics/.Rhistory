debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
length(infected)
length(infected)
length(infected)
length(infected)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
centers <- page.rank(g, directed = T)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
centers
diffusers <- which(centers$vector == max(centers))
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
hist(centers$vector)
?graph.strengh
?graph.strenght
?graph.strength
graph.strength(g, mode = "in")
d <- graph.strength(g, mode = "in")
hist(d)
g1 <- g <- read.graph("./SLA2_altezza.gml", format="gml")
d <- graph.strength(g1, mode = "in")
hist(d)
d1 <- graph.strength(g1, mode = "in")
d <- graph.strength(g, mode = "in")
hist(d)
hist(d1)
g1
g2
g1
f
g
g
g1
g <- read.graph("./CTRL_amore.gml", format="gml")
g1 <- g <- read.graph("./SLA2_altezza.gml", format="gml")
d1 <- graph.strength(g1, mode = "in")
d <- graph.strength(g, mode = "in")
hist(d)
hist(d1)
hist(d1, breaks = 20)
hist(d1, breaks = 50)
hist(d, breaks = 50)
E(g)$weight
E(g1)$weight
g <- read.graph("./CTRL_dimatteo.gml", format="gml")
g1 <- g <- read.graph("./SLA3_Borrelli.gml", format="gml")
d1 <- graph.strength(g1, mode = "in")
d <- graph.strength(g, mode = "in")
hist(d1, breaks = 20)
hist(d, breaks = 20)
E(g)$weight
E(g1)$weight
2.2131e-04 3.0805e-04 2.0336e-04 1.4446e-04
g1 <- read.graph("./SLA3_Borrelli.gml", format="gml")
g <- read.graph("./CTRL_dimatteo.gml", format="gml")
E(g1)$weight
E(g1)$weight
E(gg)$weight
E(g)$weight
d1 <- graph.strength(g1, mode = "in")
d <- graph.strength(g, mode = "in")
hist(d, breaks = 20)
hist(d1, breaks = 20)
d
hist(d1, breaks = 20)
d1 <- graph.strength(g1, mode = "in")
g1 <- read.graph("./SLA3_Borrelli.gml", format="gml")
library(igraph)
g1 <- read.graph("./SLA3_Borrelli.gml", format="gml")
g <- read.graph("./CTRL_dimatteo.gml", format="gml")
d1 <- graph.strength(g1, mode = "in")
d <- graph.strength(g, mode = "in")
hist(d1, breaks = 20)
hist(d, breaks = 20)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
coords
plot.igraph(g, edge.arrow.mode = 0, layout=coords, main = m)
plot.igraph(g, edge.arrow.mode = 0, layout=coords)
i <- infomap.community(g, e.weights = E(g)$weight)
i
imembersh(i)
membership(i)
plot.igraph(g, edge.arrow.mode = 0, layout=coords, mark.groups = i)
plot.igraph(g, edge.arrow.mode = 0, layout=coords, mark.groups = i$membership)
plot.igraph(g, edge.arrow.mode = 0, layout=coords,  mark.groups = by(seq_along(i$membership))
plot.igraph(g, edge.arrow.mode = 0, layout=coords,  mark.groups = by(seq_along(i$membership)))
communityEdgeBetwn <- edge.betweenness.community(g)
plot(igraphDat,
vertex.color = communityEdgeBetwn$membership, vertex.size = log(degree(igraphDat) + 1),
mark.groups = by(seq_along(communityEdgeBetwn$membership), communityEdgeBetwn$membership, invisible))
plot(g,
vertex.color = communityEdgeBetwn$membership, vertex.size = log(degree(igraphDat) + 1),
mark.groups = by(seq_along(communityEdgeBetwn$membership), communityEdgeBetwn$membership, invisible))
plot(g,
vertex.color = communityEdgeBetwn$membership, vertex.size = log(degree(g) + 1),
mark.groups = by(seq_along(communityEdgeBetwn$membership), communityEdgeBetwn$membership, invisible))
plot(g,
vertex.color = communityEdgeBetwn$membership, vertex.size = log(degree(g) + 1),
mark.groups = by(seq_along(communityEdgeBetwn$membership), communityEdgeBetwn$membership, invisible), edge.arrow.mode = 0)
plot(g,
vertex.color = communityEdgeBetwn$membership,
mark.groups = by(seq_along(communityEdgeBetwn$membership), communityEdgeBetwn$membership, invisible), edge.arrow.mode = 0)
plot(g,
vertex.color = communityEdgeBetwn$membership, vertex.size = log(degree(g) + 1),
mark.groups = by(seq_along(communityEdgeBetwn$membership), communityEdgeBetwn$membership, invisible), edge.arrow.mode = 0, layout = coords)
plot(g,
vertex.color = communityEdgeBetwn$membership, vertex.size = log(degree(g) + 1),
mark.groups = by(seq_along(communityEdgeBetwn$membership), communityEdgeBetwn$membership, invisible), edge.arrow.mode = 0)
plot(igraphDat,
vertex.color = communityEdgeBetwn$membership, vertex.size = log(degree(igraphDat) + 1),
mark.groups = by(seq_along(communityEdgeBetwn$membership), communityEdgeBetwn$membership, invisible))
iGraphDat <- f
iGraphDat <- g
plot(igraphDat,
vertex.color = communityEdgeBetwn$membership, vertex.size = log(degree(igraphDat) + 1),
mark.groups = by(seq_along(communityEdgeBetwn$membership), communityEdgeBetwn$membership, invisible))
igraphDat <- g
plot(igraphDat,
vertex.color = communityEdgeBetwn$membership, vertex.size = log(degree(igraphDat) + 1),
mark.groups = by(seq_along(communityEdgeBetwn$membership), communityEdgeBetwn$membership, invisible))
plot(igraphDat,
vertex.color = communityEdgeBetwn$membership, vertex.size = log(degree(igraphDat) + 1),
mark.groups = by(seq_along(communityEdgeBetwn$membership), communityEdgeBetwn$membership, invisible), edge.arrow.mode = 0)
(communityEdgeBetwn$membership
)
by(seq_along(communityEdgeBetwn$membership), communityEdgeBetwn$membership, invisible))
by(seq_along(communityEdgeBetwn$membership), communityEdgeBetwn$membership, invisible)
plot(igraphDat,
vertex.color = communityEdgeBetwn$membership, vertex.size = log(degree(igraphDat) + 1),
mark.groups = by(seq_along(communityEdgeBetwn$membership), communityEdgeBetwn$membership, invisible), edge.arrow.mode = 0, layout =  coords )
coords
plot(igraphDat,
vertex.color = communityEdgeBetwn$membership, vertex.size = log(degree(igraphDat) + 1),
mark.groups = by(seq_along(communityEdgeBetwn$membership), communityEdgeBetwn$membership, invisible), edge.arrow.mode = 0, layout =  coords[-3] )
coords[-3]
coords[,-3]
plot(igraphDat,
vertex.color = communityEdgeBetwn$membership, vertex.size = log(degree(igraphDat) + 1),
mark.groups = by(seq_along(communityEdgeBetwn$membership), communityEdgeBetwn$membership, invisible), edge.arrow.mode = 0, layout =  coords[,-3] )
source('~/Tesi/gitProject/neuroscience/source/R/mst_edges_check/mst_check.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
g
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
weank
weak
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
weak
strong
E(g)$strong
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
weak
strong
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
strong
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
strong
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
?cluster_infomap
?cluster.infomap
?cluster_infomap
library(igraph)
?cluster.infomap
?cluster_infomap
storng
strong
weak
source('~/.active-rstudio-document', echo=TRUE)
strong
weak <<- 0
strong <<- 0
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
up_var(weak, strong)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
weak
p_var <- function(){
print(weak)
print(strong)
}
p_var()
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
p_var()
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
p_var()
rm(list = ls()
rm(list = ls())
rm(list = ls())
source('~/.active-rstudio-document', echo=TRUE)
g
g <- read.graph("./CTRL_barbatoa.gml", format="gml")
g
g <- read.graph("./CTRL_dimatteo.gml", format="gml")
f
g
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
g <- read.graph("./CTRL_dimatteo.gml", format="gml")
st_c <- graph.strength(g, mode="in")
st_c
st_c <- graph.strength(g, mode="in", weighted.mea)
st_c <- graph.strength(g, mode="in", weights = E(g)$weight)
st_c
mean(st_c)
MC <- mean(st_c)
g <- read.graph("./SLA3_ambrosino_p.gml", format="gml")
g
g <- read.graph("./CTRL_dimatteo.gml", format="gml")
g
st_p <- graph.strength(g, mode="in", weights = E(g)$weight)
mean(st_c)
mean(st_p)
g <- read.graph("./SLA3_Borrelli.gml", format="gml")
st_p <- graph.strength(g, mode="in", weights = E(g)$weight)
mean(st_p)
max(centers$vector)
?max
which(centers$vector == max(centers$vector))
centers[3]
centers
centers <- betweenness(g)
sort(centers)
sort(centers, decreasing = T)
centers[1]
centers[2]
centers <- sort(center, decreasing = T)
centers <- sort(centers, decreasing = T)
centers[1]
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
centers[1]
which(centers[1])
diffusers <- which(centers == max)
centers <- betweenness(g)
diffusers <- which(centers == max)
centers <- betweenness(g)
diffusers <- which(centers == max(centers))
diffusers
diffusers <- c(match(centers[1], centers), match(centers[2], centers))
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
round
# "growth_curve"
num_cum = unlist(lapply(1:i, function(x) length(infected[x]) ))
p_cum = num_cum/max(num_cum)
time = 1:i
png(file = "./temporal_growth_curve.png",
width=5, height=5,
units="in", res=300)
plot(p_cum~time, type = "b")
dev.off()
# "growth_curve"
num_cum = unlist(lapply(1:i, function(x) length(infected[x]) ))
p_cum = num_cum/max(num_cum)
time = 1:i
png(file = "./temporal_growth_curve.png",
width=5, height=5,
units="in", res=300)
plot(p_cum~time, type = "b")
dev.off()
# "growth_curve"
num_cum = unlist(lapply(1:i, function(x) length(infected[x]) ))
p_cum = num_cum/max(num_cum)
time = 1:i
png(file = "./temporal_growth_curve.png",
width=5, height=5,
units="in", res=300)
plot(p_cum~time, type = "b")
dev.off()
# "growth_curve"
num_cum = unlist(lapply(1:i, function(x) length(infected[x]) ))
p_cum = num_cum/max(num_cum)
time = 1:i
png(file = "./temporal_growth_curve.png",
width=5, height=5,
units="in", res=300)
plot(p_cum~time, type = "b")
dev.off()
num_cum = unlist(lapply(1:i, function(x) length(infected[x]) ))
p_cum = num_cum/max(num_cum)
time = 1:i
png(file = "./temporal_growth_curve.png",
width=5, height=5,
units="in", res=300)
plot(p_cum~time, type = "b")
strong
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
plot_time_series = function(infected, m){
num_cum = unlist(lapply(1:m,
function(x) length(infected[[x]]) ))
p_cum = num_cum/node_number
p = diff(c(0, p_cum))
time = 1:m
plot(p_cum~time, type = "b",
ylab = "CDF", xlab = "Time",
xlim = c(0,total_time), ylim =c(0,1))
}
plot_time_series(infected, length(infected))
plot_time_series = function(infected, m){
num_cum = unlist(lapply(1:m,
function(x) length(infected[[x]]) ))
p_cum = num_cum/vcount(g)
p = diff(c(0, p_cum))
time = 1:m
plot(p_cum~time, type = "b",
ylab = "CDF", xlab = "Time",
xlim = c(0,total_time), ylim =c(0,1))
}
plot_time_series(infected, length(infected))
plot_time_series = function(infected, m){
num_cum = unlist(lapply(1:m,
function(x) length(infected[[x]]) ))
p_cum = num_cum/vcount(g)
p = diff(c(0, p_cum))
time = 1:m
plot(p_cum~time, type = "b",
ylab = "CDF", xlab = "Time",
xlim = c(0,length(infected)), ylim =c(0,1))
}
plot_time_series(infected, length(infected))
plot_time_series = function(infected, m){
num_cum = unlist(lapply(1:m,
function(x) length(infected[[x]]) ))
p_cum = num_cum/vcount(g)
p = diff(c(0, p_cum))
time = 1:m
plot(p_cum~time, type = "b",
ylab = "CDF", xlab = "Time",
xlim = c(0,length(infected)), ylim =c(0,1))
}
plot_time_series(infected, length(infected))
plot(round)
round
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
res
infected
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
plot(infected_round, xlab = "days", ylab="infected nodes", xlim = c(0,length(infected_round)),
ylim = c(0,90))
length(infected_round)
axis(1, at = seq(2, length(infected_round), by = 1), las=2)
axis(1, at = seq(1, length(infected_round), by = 1), las=2)
plot(infected_round, xlab = "days", ylab="infected nodes", xlim = c(0,length(infected_round)),
ylim = c(0,90))
axis(1, at = seq(1, length(infected_round), by = 1), las=2)
plot(infected_round, xlab = "days", ylab="infected nodes")
axis(1, at = seq(1, length(infected_round), by = 1), las=2)
plot(infected_round, xlab = "days", ylab="infected nodes")
axis(1, at = seq(1, length(infected_round), by = 1), las=2)
axis(1, at = seq(1, length(infected_round), by = 1))
plot(infected_round, xlab = "days", ylab="infected nodes")
axis(1, at = seq(1, length(infected_round), by = 1))
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
plot(infected_round, xaxt =  = "days", ylab="infected nodes")
axis(1, at = seq(1, length(infected_round), by = 1))
plot(infected_round, xlab = "days", ylab="infected nodes")
axis(1, at = seq(1, length(infected_round), by = 1))
plot(infected_round, xlab = "days", ylab="infected nodes")
axis(0, at = seq(1, length(infected_round), by = 1))
plot(infected_round, xlab = "days", ylab="infected nodes")
axis(0, at = seq(1, length(infected_round), by = 1))
plot(infected_round, xlab = "days", ylab="infected nodes")
axis(1, at = seq(2, length(infected_round), by = 1))
plot(infected_round, xlab = "days", ylab="infected nodes")
axis(1, at = seq(1, length(infected_round), by = 1))
axis(2, at = seq(1, (vcount(g), by = 1))
axis(2, at = seq(1, (vcount(g), by = 1)))
plot(infected_round, xlab = "days", ylab="infected nodes")
axis(1, at = seq(1, length(infected_round), by = 1))
axis(2, at = seq(1, (vcount(g), by = 1)))
axis(2, at = seq(1, vcount(g), by = 1))
axis(2, at = seq(1, vcount(g), by = 10))
plot(infected_round, xlab = "days", ylab="infected nodes")
axis(1, at = seq(1, length(infected_round), by = 1))
axis(2, at = seq(1, vcount(g), by = 10))
plot(infected_round, xaxt='n',xlab = "days", ylab="infected nodes")
plot(infected_round, xaxt='n', yaxt="n",xlab = "days", ylab="infected nodes")
axis(1, at = seq(1, length(infected_round), by = 1))
axis(2, at = seq(1, vcount(g), by = 10))
axis(2, at = seq(10, vcount(g), by = 10))
plot(infected_round, xaxt='n', yaxt="n",xlab = "days", ylab="infected nodes")
axis(1, at = seq(1, length(infected_round), by = 1))
axis(2, at = seq(10, vcount(g), by = 10))
dev.copy(paste(pathOut, "grow.png"), sep"")
dev.copy(paste(pathOut, "grow.png"0, sep=0""))
dev.copy(paste(pathOut, "grow.png"0, sep=""))
dev.copy(paste(pathOut, "grow.png"0, sep=""))
dev.copy(paste(pathOut, "grow.png", sep=""))
dev.copy(png,paste(pathOut, "grow.png", sep=""))
dev.off()
plot.igraph(g, edge.arrow.mode = 0, layout=coords[,-3], main = m)
plot.igraph(g, edge.arrow.mode = 0, layout=coords[,-1], main = m)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
coords
v <- cbind(coords[,3], coords[,2])
plot.igraph(g, edge.arrow.mode = 0, layout=v, main = m)
v
plot.igraph(g, edge.arrow.mode = 0, layout=coords[,-1], main = m)
plot.igraph(g, edge.arrow.mode = 0, layout=coords[,-3], main = m)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
syscall <- paste("convert -delay 100 -loop 0 ", pathOut, "xy*.png ",pathOut,"xy_animation.gif", sep="")
pathOut = "imgs/"
syscall <- paste("convert -delay 100 -loop 0 ", pathOut, "xy*.png ",pathOut,"xy_animation.gif", sep="")
syscall <- paste("convert -delay 100 -loop 0 ", pathOut, "*.pngxy ",pathOut,"xy_animation.gif", sep="")
pathOut
syscall <- paste("convert -delay 100 -loop 0 ", pathOut, "*.pngxy ",pathOut,"xy_animation.gif", sep="")
system(syscall)
syscall <- paste("convert -delay 100 -loop 0 ", pathOut, "xy*.png ",pathOut,"xy_animation.gif", sep="")
system(syscall)
syscall <- paste("convert -delay 100 -loop 0 ", pathOut, "xz*.png ",pathOut,"xz_animation.gif", sep="")
system(syscall)
syscall <- paste("convert -delay 100 -loop 0 ", pathOut, "yz*.png ",pathOut,"yz_animation.gif", sep="")
system(syscall)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
zy <- cbind(coords[,3],coords[,2])
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
par(mfrow=c(2,2))
plot.igraph(g, edge.arrow.mode = 0, layout=coords[,-3], main = m)
plot.igraph(g, edge.arrow.mode = 0, layout=coords[,-2], main = m)
zy <- cbind(coords[,3],coords[,2])
plot.igraph(g, edge.arrow.mode = 0, layout=zy, main = m)
plot(infected_round)
a = 1:16
a
a[1:6]
a[1:1]
par(mfrow=c(2,2))
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
plot.igraph(g, edge.arrow.mode = 0, layout=coords[,-3], main = m)
plot.igraph(g, edge.arrow.mode = 0, layout=coords[,-2], main = m)
par(mfrow=c(2,2))
plot(infected_round[1:m], xaxt='n', yaxt="n",xlab = "days", ylab="infected nodes")
axis(1, at = seq(1, length(infected_round), by = 1))
axis(2, at = seq(10, vcount(g), by = 10))
par(mfrow=c(2,2))
plot.igraph(g, edge.arrow.mode = 0, layout=zy, main = m)
plot(infected_round[1:m], xaxt='n', yaxt="n",xlab = "days", ylab="infected nodes")
axis(1, at = seq(1, length(infected_round), by = 1))
axis(2, at = seq(10, vcount(g), by = 10))
dev.copy(png,pathfile)
par(mfrow=c(2,2))
plot.igraph(g, edge.arrow.mode = 0, layout=coords[,-3], main = m)
plot.igraph(g, edge.arrow.mode = 0, layout=coords[,-2], main = m)
zy <- cbind(coords[,3],coords[,2])
plot.igraph(g, edge.arrow.mode = 0, layout=zy, main = m)
plot(infected_round[1:m], xaxt='n', yaxt="n",xlab = "days", ylab="infected nodes")
axis(1, at = seq(1, length(infected_round), by = 1))
axis(2, at = seq(10, vcount(g), by = 10))
par(mfrow=c(2,2))
axis(2, at = seq(10, vcount(g), by = 10))
plot(infected_round[1:m], xaxt='n', yaxt="n",xlab = "days", ylab="infected nodes")
plot(infected_round[1:m], xaxt='n', yaxt="n",xlab = "days", ylab="infected nodes")
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/mytry.R', echo=TRUE)
plot.igraph(g, edge.arrow.mode = 0, layout=coords[,-3], main = m)
par(mfrow=c(2,2))
plot.igraph(g, edge.arrow.mode = 0, layout=coords[,-3], main = m)
plot.igraph(g, edge.arrow.mode = 0, layout=coords[,-2], main = m)
zy <- cbind(coords[,3],coords[,2])
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
par(mfrow=c(2,2))
plot.igraph(g, edge.arrow.mode = 0, layout=coords[,-3], main = m)
plot.igraph(g, edge.arrow.mode = 0, layout=coords[,-2], main = m)
zy <- cbind(coords[,3],coords[,2])
plot.igraph(g, edge.arrow.mode = 0, layout=zy, main = m)
plot(infected_round[1:m], xaxt='n', yaxt="n",xlab = "days", ylab="infected nodes")
axis(1, at = seq(1, length(infected_round), by = 1))
axis(2, at = seq(10, vcount(g), by = 10))
dev.copy(png,pathfile)
dev.off()
par(mfrow=c(2,2))
plot.igraph(g, edge.arrow.mode = 0, layout=coords[,-3], main = m)
plot.igraph(g, edge.arrow.mode = 0, layout=coords[,-2], main = m)
zy <- cbind(coords[,3],coords[,2])
plot.igraph(g, edge.arrow.mode = 0, layout=zy, main = m)
plot(infected_round[1:m], xaxt='n', yaxt="n",xlab = "days", ylab="infected nodes")
axis(1, at = seq(1, length(infected_round), by = 1))
axis(2, at = seq(10, vcount(g), by = 10))
dev.copy(png,pathfile)
dev.off()
axis(1, at = seq(1, length(infected_round), by = 1))
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
Q
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
