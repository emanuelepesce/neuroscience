tot
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
tot
g[vs, vt]
vs
vt
neighbors
neighbors(g, v = vt)
n <- neighbors(g, v = vt)
n[1]
get.vertex.attribute(g, name="name", index= n[1])
g["V8", vt]
nrbs <- neighbors(g, 1, vt, mode = "in")
nrbs <- neighbors(g, vt, mode = "in")
Q
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
tot
diffusers
nrbs
vs <- get.vertex.attribute(g, name="id", index= nrbs[i])
vs
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
tr_toInfect <- pression/tot
tr_toInfect
pression
tot
pression/tot
tot/pression
tr_toInfect
tr_toInfect*10
tr_toInfect*100
tr_toInfect*10000
tr_toInfect*1000
tr_toInfect*1000
tr_toInfect*1000
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
vcount(g)
90 < vcount(g)
Q
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
length(nrbs)
nrbs <- neighbors(g, vt, mode = "in")
length(nrbs)
nrbs
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
vs1
vs1 <- get.vertex.attribute(g, name="name", index= vs)
vs1
vt
V(g)$name
matrix(90,90)
matrix(90,90, 0)
v
vs
Q
matrix
?matrix
matrix(0, nrow=90, ncol=90)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
a <- toWrite
toWrite <- unlist(toWrite)
toWrite<- matrix(toWrite, ncol = 5, nrow = (k-1), byrow=TRUE)
write.table(toWrite,file=pathOut,sep=",", col.names = F, row.names = F)
max_conquer
res
length(res$infected[length(res$infected)])
res$infected[length(res$infected)]
res$infected[[length(res$infecte00d)]]
res$infected[[length(res$infected)]]
length(res$infected[[length(res$infected)]])
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
?closeness
closeness(g)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
E(g)$weight
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
pression
pression
tot
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
vs
vt
vs1
g[vs, vt]
g[vs, vt, attr="weight"]
g[vt]
nrbs <- neighbors(g, vt, mode = "in")
nrbs
vt
g["V5", vt, attr="weight"]
g["V5", "V2", attr="weight"]
vt
g["V2", "V5", attr="weight"]
vt
vs
diffusers
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
diffusers
Q
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
diffusers
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
centers <- betweenness(g)
centers <- sort(centers, decreasing = T)
diffusers <- c(match(centers[1], centers), match(centers[2], centers))
diffusers[1] <- get.vertex.attribute(g, name="id", index= names(centers[1]))
diffusers[2] <- get.vertex.attribute(g, name="id", index= names(centers[2]))
diffusers
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
diffusers
infected[[i+1epidemicsPression.]] = sort(update_diffusers(g,infected[[i]]))
infected[[i+1]] = sort(update_diffusers(g,infected[[i]]))
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
g
diffusers
V(g)
centers <- closeness(g)
centers <- sort(centers, decreasing = T)
diffusers <- c(match(centers[1], centers), match(centers[2], centers))
diffusers[1] <- get.vertex.attribute(g, name="id", index= names(centers[1]))
diffusers[2] <- get.vertex.attribute(g, name="id", index= names(centers[2]))
#   epidemicsC
res <- epidemicsPression(g = g, diffusers = diffusers, "./imgsP2/")
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
vs1
vs
vt
v
tot
vt
Q
Q
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
vs
V(g)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
diffusers
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
diffusers
nearest_neighbors = neighborhood(g, 1, diffusers, "out")
nearest_neighbors = data.frame(table(unlist(nearest_neighbors)))
nearest_neighbors = subset(nearest_neighbors, !(nearest_neighbors[,1]%in%diffusers))
nearest_neighbors
# infect vertices
ve <- as.vector(nearest_neighbors[,1])
ve <- strtoi(ve)
ve
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
vr
ve
v
get.vertex.attribute(g, name="name", index= b)
get.vertex.attribute(g, name="name", index= v)
E(g)
E(g)$id
g
V(g)$id
get.vertex.attribute(g, name="name", index= 0)
diffusers
?neighborhood
id[ match("Peter", V(g)$name) ]
id[ match("V2", V(g)$name) ]
id <- V(g)$id
id[ match("V2", V(g)$name) ]
V(g)[1]
ids <- V(g)$id
match(v, id)
id
match(v, ids)
v
V(g)[1]$id
v
match(v, ids)
v
vt <- get.vertex.attribute(g, name="name", index= match(v, ids))
vt
v
nrbs <- neighbors(g, vt, mode = "in")
nrbs
nrbs[1]
g["V2", "V5"]
g[v, nrbs[1]]
g[vt, nrbs[1]]
g[vt, "V5"]
vs <- get.vertex.attribute(g, name="name", index= nrbs[i])
vs <- get.vertex.attribute(g, name="name", index= nrbs[1])
vs
g[vs, vt]
vs <- get.vertex.attribute(g, name="id", index= nrbs[i])
vs <- get.vertex.attribute(g, name="id", index= nrbs[1])
vs
vs <- get.vertex.attribute(g, name="id", index= 1)
vs
v
vs <- get.vertex.attribute(g, name="id", index= 1)
vs <- get.vertex.attribute(g, name="id", index= match(v, ids))
vs
match(v, ids)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
pression
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
pression
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
vs1 <- get.vertex.attribute(g, name="name", index= vs)
up_M_edges(vs, v)
print(g[vs1, vt, attr="weight"])
pression <- pression + g[vs1, vt]*get_M_edges(vs,v)
pression
for(i in 1:length(nrbs)){
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
pression
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
pression
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
pression <- pression + g[vs1, vt]*get_M_edges(vs,v)
pression
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
vs1
vt
(g[vs1, vt, attr = "strong"]
)
tot
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
tr_infect
runif(1) <= tr_toInfect
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
pression
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
tr_infect
g[vs1, vt, attr = "strong"]==1
runif(1) <= tr_toInfect
up_var(t_weak, t_strong)
tossing = 1
tr_infect
runif(1) <= tr_toInfect
runif(1) <= tr_toInfect
runif(1) <= tr_toInfect
print(vt)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
nrbs
length(nrbs)
pression
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
vt
diffuses
diffusers
nrbs
nearest_neighbors
pression
tot
g <- read.graph("./CTRL_conte.gml", format="gml")
vt <- get.vertex.attribute(g, name="name", index= match(v, ids))
ids <- V(g)$id
vs <- get.vertex.attribute(g, name="id", index= match(86, ids))
vs
vs1 <- get.vertex.attribute(g, name="name", index= vs)
vs1
g[vs1, vt, attr = "strong"]==1
g[vs1, vt, attr = "strong"]
vt
g[vs1, "V5", attr = "strong"]
g[vs1, "V5", attr = "strong"] == 1
g[vs1, "V25", attr = "strong"] == 1
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
debugSource('~/Tesi/gitProject/neuroscience/source/R/epidemics/epidemicsPression.R', echo=TRUE)
nrbs <- neighbors(g, vt, mode = "in")
nrbs
vs <- get.vertex.attribute(g, name="name", index= nrbs[i])
vs <- get.vertex.attribute(g, name="name", index= nrbs[i2])
vs <- get.vertex.attribute(g, name="name", index= nrbs[12])
vs
length(nrbs)
vs <- get.vertex.attribute(g, name="name", index= nrbs[90])
vs <- get.vertex.attribute(g, name="name", index= nrbs[12])
vs
g[vs, vt, attr="weight"]
vs <- get.vertex.attribute(g, name="id", index= match(nrbs[90], ids))
vs <- get.vertex.attribute(g, name="id", index= match(nrbs[12], ids))
ids
v
nrbs[1]
v
vs <- get.vertex.attribute(g, name="id", index= 24
)
vs
vs <- get.vertex.attribute(g, name="name", index= 24)
vs
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/analyzeResults.R', echo=TRUE)
m_mean1
m_var1
m_mean2
m_var2
m_mean3
m_var3
write.csv(m_mean1, file="m_mean1")
write.csv(m_mean1, file="m_mean1.csv")
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/analyzeResults.R', echo=TRUE)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/analyzeResults.R', echo=TRUE)
m_mean3
m_var3
m_var1
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/analyzeResults.R', echo=TRUE)
c.data <- c.data/20
c.data
p.data <- read.csv(pathInP)
p.data
p.data[,1]
pathInC <- "./../../../data/toyData/results/5_Diffusion_closeness/cutted/diffusion_controls.csv"
pathInP <- "./../../../data/toyData/results/5_Diffusion_closeness/cutted/diffusion_patients.csv"
c.data <- read.csv(pathInC)
p.data <- read.csv(pathInP)
c.data[,2:4] <- c.data[,2:4]/20
p.data[,2:4] <- p.data[,2:4]/50
p.data
pathInC <- "./../../../data/toyData/results/5_Diffusion_closeness/cutted/diffusion_controls.csv"
pathInP <- "./../../../data/toyData/results/5_Diffusion_closeness/cutted/diffusion_patients.csv"
c.data <- read.csv(pathInC)
p.data <- read.csv(pathInP)
p.data
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/analyzeResults.R', echo=TRUE)
controls
m_mean2
v_var2
m_var2
m_mean2
m_var2
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/analyzeResults.R', echo=TRUE)
hist(c.data[,2])
v_var2
m_var2
pathInC <- "./../../../data/toyData/results/5_Diffusion_closeness/t_test_cutted/diffusion_controls.csv"
pathInP <- "./../../../data/toyData/results/5_Diffusion_closeness/t_test_cutted/diffusion_patients.csv"
c.data <- read.csv(pathInC, header=F)
p.data <- read.csv(pathInP, header=F)
p.data[,2]
vat(p.data[,2])
var(p.data[,2])
v <- p.data[,2]
max(v)
min(v)
?SD
?sd
sd(v)
pathInC <- "./../../../data/toyData/results/5_Diffusion_closeness/t_test_cutted/diffusion_controls.csv"
pathInP <- "./../../../data/toyData/results/5_Diffusion_closeness/t_test_cutted/diffusion_patients.csv"
c.data <- read.csv(pathInC, header=F)
p.data <- read.csv(pathInP, header=F)
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/analyzeResults.R', echo=TRUE)
sd2
sd
sd2
write.csv(sd2, file="./res/sd2.csv")
hist(sd)
hist(sd2)
m_mean2[]
m_mean2[1,]
v <- m_mean2[1,]
hist(v)
unlist(m_mean2)
v <- unlist(m_mean2[1,])
v
pathInC <- "./../../../data/toyData/results/5_Diffusion_closeness/t_test_MST/diffusion_controls.csv"
pathInP <- "./../../../data/toyData/results/5_Diffusion_closeness/t_test_MST/diffusion_patients.csv"
c.data <- read.csv(pathInC)
p.data <- read.csv(pathInP)
m_mean3 <- matrix(ncol = 2, nrow = 3)
colnames(m_mean3) <- c("controls", "patients")
rownames(m_mean3) <- c("time", "strong", "weak")
for(i in 1:3){ # controls patients
m_mean3[i,1] <- mean(c.data[,i+1])
m_mean3[i,2] <- mean(p.data[,i+1])
}
m_var3 <- matrix(ncol = 2, nrow = 3)
colnames(m_var3) <- c("controls", "patients")
rownames(m_var3) <- c("time", "strong", "weak")
for(i in 1:3){ # controls patients
m_var3[i,1] <- var(c.data[,i+1])
m_var3[i,2] <- var(p.data[,i+1])
}
as.vector(v)
v <- m_mean2[1,]
v <- as.vector(v)
hist(v)
v
hist(v)
plot(v)
hist(v)
barplot(v)
barplot(sd2)
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
m <- as.matrix(sd2)
m
m[,1]
t(m)
barplot(t(m))
barplot(t(m), col=c("darkblue","red"))
barplot(t(m), col=c("darkblue","red"),     legend = rownames(counts)))
barplot(t(m), col=c("darkblue","red"), legend = rownames(counts))
barplot(t(m), col=c("darkblue","red"), legend = rownames(m))
barplot(t(m), col=c("darkblue","red"), legend = rownames(t(m))
barplot(t(m), col=c("darkblue","red"), legend = rownames(t(m)))
barplot(t(m), col=c("darkblue","red"), legend = rownames(t(m)), xlim = c(0,100))
barplot(t(m), col=c("darkblue","red"), legend = rownames(t(m)), ylim = c(0,100))
barplot(t(m), col=c("darkblue","red"), legend = rownames(t(m)), ylim = c(0,200))
barplot(t(m), col=c("darkblue","red"), legend = rownames(t(m)), ylim = c(0,110))
barplot(t(m), col=c("darkblue","red"), legend = rownames(t(m)), ylim = c(0,max(t(m))))
max(t(m))
barplot(t(m), col=c("darkblue","red"), legend = rownames(t(m)), ylim = c(0,110))
barplot(t(m), col=c("darkblue","red"), legend = rownames(t(m)), ylim = c(0,max(t(m))))
m1 <- t(m)
table(m1)
barplot(m1, col=c("darkblue","red"), legend = rownames(t(m)), ylim = c(0,110))
t1 <- table(m1)
barplot(t1, col=c("darkblue","red"), legend = rownames(t(m)), ylim = c(0,110))
m1
barplot(t1, col=c("darkblue","red"), legend = rownames(t(m)), ylim = c(0,100))
barplot(m1, col=c("darkblue","red"), legend = rownames(m1), ylim = c(0,100))
m1
colnames(m1)
barplot(m1, col=c("darkblue","red"), legend = rownames(m1), ylim = c(0,100))
barplot(m1, col=c("darkblue","red"), legend = rownames(m1), ylim = c(0,130))
barplot(m1, col=c("darkblue","red"), legend = rownames(m1), ylim = c(0,130), beside = TRUE)
barplot(m1, col=c("darkblue","red"), legend = rownames(m1), ylim = c(0,100), beside = TRUE)
barplot(m1, col=c("darkblue","red"), legend = rownames(m1), ylim = c(0,90), beside = TRUE)
barplot(m1, col=c("darkblue","red"), legend = rownames(m1), ylim = c(0,95), beside = TRUE)
barplot(m1, col=c("darkblue","red"), legend = rownames(m1), ylim = c(0,100), beside = TRUE)
m1 <- t(as.matrix(m_sd2))
source('~/Tesi/gitProject/neuroscience/source/R/epidemics/analyzeResults.R', echo=TRUE)
m1 <- t(as.matrix(sd2))
barplot(m1, col=c("darkblue","red"), legend = rownames(m1), ylim = c(0,100), beside = TRUE)
m2 <- t(as.matrix(m_mean2))
barplot(m2, col=c("darkblue","red"), legend = rownames(m1), ylim = c(0,100), beside = TRUE)
barplot(m2, col=c("darkblue","red"), legend = rownames(m1), ylim = c(0,400), beside = TRUE)
m2 <- t(as.matrix(sd2))
barplot(m2, col=c("darkblue","red"), legend = rownames(m1), ylim = c(0,100), beside = TRUE)
m2 <- t(as.matrix(m_mean2))
barplot(m2, col=c("darkblue","red"), legend = rownames(m1), ylim = c(0,400), beside = TRUE)
palette(rainbow(6))     # six color rainbow
(palette(gray(seq(0,.9,len = 25))))
(seq(0,.9,len = 25)
)
palette(rainbow(10))     # six color rainbow
(palette(gray(seq(0,.9,len = 25))))
rainbow()
topo.colors()
terrain.colors()
heat.colors()
