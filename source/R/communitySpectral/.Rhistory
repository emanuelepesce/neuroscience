mantel.rtest(m1, m2, nrepet = 10)
mantel.rtest(m1, m2, nrepet = 100)
m1
mantel.rtest(m1, m2, nrepet = 100)
mantel.rtest(m1, m2, nrepet = 1000)
coOc_Ctrl
d1 <- as.dist(coOc_Ctrl)
d2 <- as.dist(coOc_Ptnt)
m1 <- as.matrix(d1)
m2 <- as.matrix(d2)
mantel.rtest(m1, m2, nrepet = 100)
mantel.rtest(d1, d2, nrepet = 100)
mantel.rtest(d1, d2, nrepet = 5000)
H
str(H)
str(H)
H$h1@.col
h1<-H$h1
h1$col
h1$colorTable
h1$low
h1$high
h1$vline
h1$rowDendrogram
h2$rowDendrogram
h1$rowDendrogram
str(h1)
str(H$h2)
help("heatmap.2")
h1$breaks
h1$colDendrogram
h1$carpet
h1
order.dendrogram(h1$rowDendrogram)
help("order.dendrogram")
o <- order.dendrogram(h1$rowDendrogram)
o[1]
h1$rowDendrogram[o[1]]
h1$rowDendrogram[o[2]]
h1$rowDendrogram[o[3]]
h1$rowDendrogram[1
]
h1$rowDendrogram[1]
h1$rowDendrogram$order
h1$rowDendrogram[1]
str(h1)
str(h1$rowDendrogram)
h1$carpet
m
m1
str(h1)
help("as.dist")
d1 <- as.dist(coOc_Ctrl, methods = "manhattan")
d1 <- as.dist(coOc_Ctrl, method = "manhattan")
ccoOc_Ctrl
coOc_Ctrl <- coOccurrence(pathOutC)
coOc_Ptnt <- coOccurrence(pathOutP)
coOc_Ctrl
d1 <- as.dist(coOc_Ctrl, method = "manhattan")
h1$rowDendrogram
h1$colDendrogram
str(H$h1)
mantel.rtest(d1, d2, nrepet = 100)
mant <- mantel.rtest(d1, d2, nrepet = 100)
mant
str(mant)
mant$sim
mant$pvalue
mant$obs
mant$sim
str(H$h1)
h1$Rowv
h1$Row
h1$Rowv
sum_occ <- coOc_Ctrl + coOc_Ctrl
h1 <- heatmap.2(t(sum_occ), tracecol = F, main = "Community Controls")
sum_occ <- coOc_Ctrl + coOc_Ctrl
h1 <- heatmap.2(t(sum_occ), tracecol = F, main = "Community Controls")
coOc_Ptnt
sum_occ
sum_occ <- coOc_Ctrl + coOc_Ctrl
h1 <- heatmap.2(t(sum_occ), tracecol = F, main = "Community Controls")
sum_occ <- coOc_Ctrl + coOc_Ctrl
h1 <- heatmap.2(t(sum_occ), tracecol = F, main = "Community Controls")
sum_occ <- coOc_Ctrl + coOc_Ptnt
h1 <- heatmap.2(t(sum_occ), tracecol = F, main = "Community Controls")
occurrenceMatrix <- matrix(nrow = 90, ncol = 90, data = 0)
source('~/neuroscience-master/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
sum_occ <- coOc_Ctrl + coOc_Ptnt
jpeg(filename=paste(pathOut, "heat_sum.jpeg", sep=""),
width = 1000, height = 1000)
sumH <- heatmap.2(t(sum_occ), tracecol = F, main = "Community Controls")
dev.off()
source('~/neuroscience-master/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
membership(communities())
membership(communities
)
membership(communities)
ccoOc_Ctrl
View(coOc_Ctrl)
View(coOc_Ctrl)
barplot(coOc_Ctrl[1,])
coOc_Ctrl <- coOccurrence(pathOutC)
coOc_Ptnt <- coOccurrence(pathOutP)
barplot(coOc_Ctrl[1,])
barplot(coOc_Ctrl[1,])
barplot(coOc_Ctrl[1])
barplot(coOc_Ctrl[,2])
coOc_Ctrl[,1]
coOc_Ctrl[1,2]
coOc_Ctrl[1,][2]
coOc_Ctrl[1,][3]
coOc_Ctrl[1,]
b<-coOc_Ctrl[1,]
b[1]
b[2]
b[3]
dd <- as.dendrogram(coOc_Ctrl)
dd <- as.dendrogram(as.matrix(coOc_Ctrl))
ma <- as.matrix(coOc_Ctrl)
dd <- as.dendrogram(ma)
help("as.dendrogram")
help(specc)
ccoOc_Ctrl
controls <- performingCommunityDetection(pathInC, pathOutC)
patient <- performingCommunityDetection(pathInP, pathOutP)
m <- as.matrix(controls)
controls
coOc_Ctrl <- coOccurrence(pathOutC)
coOc_Ptnt <- coOccurrence(pathOutP)
coOc_Ctrl
m <- aas.matrix(coOc_Ctrl)
m <- as.matrix(coOc_Ctrl)
m
m[1,]
max(m[1,])
max(m[-1,])
max(m[,-1])
dim(m)[1]
coOc_Ctrl <- coOccurrence(pathOutC)
coOc_Ptnt <- coOccurrence(pathOutP)
coOc_Ctrl <- coOccurrence(pathOutC)
coOc_Ptnt <- coOccurrence(pathOutP)
m <- computeStatistic(coOc_Ctrl)
print(m)
coOc_Ctrl <- coOccurrence(pathOutC)
coOc_Ptnt <- coOccurrence(pathOutP)
m <- computeStatistic(coOc_Ctrl)
print(m)
help("heatmap.2")
H
source('~/neuroscience-master/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
H
h$h1
H$h1
str(H$h1)
help("heatmap.2")
H$h1$rowDendrogram
str(H$h1)
plot(H$h1$rowDendrogram,hang=-1,xlab="Row",sub="Dendrogram")
cutree(H$h1$rowDendrogram, 10)
cutree(H$h1$rowDendrogram, k=10)
plot(H$h1$rowDendrogram,hang=-1,xlab="Row",sub="Dendrogram")
str(H$h1$rowDendrogram)
coOc_Ptnt <- coOccurrence(pathOutP)
coOc_Ptnt <- coOccurrence(pathOutP)
#   m <- computeStatistic(coOc_Ctrl)
#   print(m)
# Test di mantell
#mantel.rtest(as.dist(coOc_Ctrl), as.dist(coOc_Ptnt), nrepet = 6000)
H <- makeHeatmap(coOc_Ctrl, coOc_Ptnt, pathOutResults)
source('~/neuroscience-master/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
coOc_Ctrl
heatmap.2(coOc_Ctrl, colv=FALSE, dendrogram= "row", trace="none")
heatmap.2(coOc_Ctrl, colv=FALSE, dendrogram= "row", trace="none")
plot(H$h1$rowDendrogram,hang=-1,xlab="Row",sub="Dendrogram")
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
debugSource('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
debugSource('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
debugSource('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
pathInC = "./../../../data/toyData/t_test_MST_controls/"
pathInP = "./../../../data/toyData/t_test_MST_patients/"
pathOutC = "./../../../data/toyData/results/3_community_spectral/t_test_MST/membership_controls.csv"
pathOutP = "./../../../data/toyData/results/3_community_spectral/t_test_MST/membership_patients.csv"
pathOutResults = "./../../../data/toyData/results/3_community_spectral/t_test_MST/"
controls <- performingCommunityDetection(pathInC, pathOutC)
patient <- performingCommunityDetection(pathInP, pathOutP)
coOc_Ctrl <- coOccurrence(pathOutC)
coOc_Ptnt <- coOccurrence(pathOutP)
H <- makeHeatmap(coOc_Ctrl, coOc_Ptnt, pathOutResults)
debugSource('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
pathInC = "./../../../data/toyData/t_test_controls/"
pathInP = "./../../../data/toyData/t_test_patients/"
pathOutC = "./../../../data/toyData/results/3_community_spectral/t_test_cutted/membership_controls.csv"
pathOutP = "./../../../data/toyData/results/3_community_spectral/t_test_cutted/membership_patients.csv"
pathOutResults = "./../../../data/toyData/results/3_community_spectral/t_test_cutted/"
controls <- performingCommunityDetection(pathInC, pathOutC)
debugSource('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
debugSource('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
debugSource('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R')
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R')
debugSource('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
M <- as.matrix(MA)
listNames <- c(listNames, files[i])
debugSource('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
listNames <- c(listNames, files[i])
# execute spectral clustering method
spc = specc(M, 10, kernel = "rbfdot")
w <- withinss(spc)
c <- centers(spc)
d <- size(spc)
spec_cl = spc@.Data
names <- V(g)$name
if(k <= 1) {
outp <- cbind(names, spec_cl)
}
else {
outp <- cbind(outp, spec_cl)
debugSource('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
listNames <- c(listNames, files[i])
# execute spectral clustering method
spc = specc(M, 10, kernel = "rbfdot")
w <- withinss(spc)
c <- centers(spc)
d <- size(spc)
spec_cl = spc@.Data
k
if(k <= 1) {
outp <- cbind(names, spec_cl)
}
outp
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
read.graph("./../../../data/toyData/t_test_controls/CTRL_dimatteo.gml")
read.graph("./../../../data/toyData/t_test_controls/CTRL_dimatteo.gml", format="gml")
g
g <- read.graph("./../../../data/toyData/t_test_controls/CTRL_dimatteo.gml", format="gml")
g
ugm <- as.undirected(g, "collapse")
MA <- get.adjacency(ugm, attr="weight")
M <- as.matrix(MA)
listNames <- c(listNames, files[i])
spc = specc(M, 10, kernel = "rbfdot")
c <- centers(spc)
d <- size(spc)
spec_cl = spc@.Data
names <- V(g)$name
if(k <= 1) {
outp <- cbind(names, spec_cl)
}
else {
outp <- cbind(outp, spec_cl)
}
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
read.graph("./../../../data/toyData/t_test_controls/CTRL_dimatteo.gml", format="gml")
g <- read.graph(cfile, format="gml")
ugm <- as.undirected(g, "collapse")
MA <- get.adjacency(ugm, attr="weight")
M <- as.matrix(MA)
ugm <- as.undirected(g, "collapse")
MA <- get.adjacency(ugm, attr="weight")
M <- as.matrix(MA)
g <- read.graph("./../../../data/toyData/t_test_controls/CTRL_dimatteo.gml", format="gml")
ugm <- as.undirected(g, "collapse")
MA <- get.adjacency(ugm, attr="weight")
M <- as.matrix(MA)
spc = specc(M, 10, kernel = "rbfdot")
w <- withinss(spc)
spc = specc(M, 10, kernel = "rbfdot")
spc = specc(M, 10, kernel = "rbfdot")
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
g <- read.graph(cfile, format="gml")
ugm <- as.undirected(g, "collapse")
MA <- get.adjacency(ugm, attr="weight")
M <- as.matrix(MA)
g <- read.graph("./../../../data/toyData/t_test_controls/CTRL_dimatteo.gml", format="gml")
g
g <- read.graph("./../../../data/toyData/t_test_controls/CTRL_penta.gml", format="gml")
ugm <- as.undirected(g, "collapse")
MA <- get.adjacency(ugm, attr="weight")
M <- as.matrix(MA)
listNames <- c(listNames, files[i])
ugm <- as.undirected(g, "collapse")
MA <- get.adjacency(ugm, attr="weight")
M <- as.matrix(MA)
spc = specc(M, 10, kernel = "rbfdot")
spc = specc(M, 10, kernel = "rbfdot")
spc = specc(M, 10, kernel = "rbfdot")
spc = specc(M, 10, kernel = "rbfdot")
spc = specc(M, 10, kernel = "rbfdot")
spc = specc(M, 10, kernel = "rbfdot")
spc = specc(M, 10, kernel = "rbfdot")
spc = specc(M, 10, kernel = "rbfdot")
spc = specc(M, 10, kernel = "rbfdot")
spc = specc(M, 10, kernel = "rbfdot")
spc = specc(M, 10, kernel = "rbfdot")
for(1:100){}
for(1:100){}
for(1:100){}
for(1:100){
spc = specc(M, 10, kernel = "rbfdot")
}
for(1 in 1:100){
spc = specc(M, 10, kernel = "rbfdot")
}
for(i in 1:100){
spc = specc(M, 10, kernel = "rbfdot")
}
M
for(i in 1:100){
spc = specc(M, 10, kernel = "rbfdot")
}
spc
for(i in 1:100){
spc = specc(M, 10, kernel = "rbfdot")
}
for(i in 1:100){
spc = specc(M, 10, kernel = "rbfdot")
}
for(i in 1:100){
spec <- NULL
spc = specc(M, 10, kernel = "rbfdot")
}
for(i in 1:100){
spc <- NULL
spc = specc(M, 10, kernel = "rbfdot")
}
spc
spc = specc(M, 10, kernel = "rbfdot")
spc
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
help("tryCatch")
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
library(igraph)
g <- read.graph()
g <- read.graph(file="./../../../data/toyData/t_test_controls/CTRL_amore.gml, format="gml")
g <- read.graph("./../../../data/toyData/t_test_controls/CTRL_amore.gml, format="gml")
g <- read.graph("./../../../data/toyData/t_test_controls/CTRL_amore.gml", format="gml")
g
help(cluster_fast_greedy())
help(cluster_fast_greedy
)
c <- cluster_fast_greedy(g, merges = TRUE, modularity = TRUE, membership = TRUE, weights = E(g)$weight)
c <- cluster_fast_greedy(g, merges = TRUE, modularity = TRUE, membership = TRUE, weights = E(g)$weight)
c <- cluster_edge_betweenness(g, weights = E(g), directed = TRUE, edce.betweenness=TRUE, merges=TRUE)
c <- cluster_edge_betweenness(g, weights = E(g), directed = TRUE)
c
c$vcount
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
library(igraph)
g <- read.graph("./../../../data/toyData/t_test_controls/CTRL_amore.gml", format="gml")
?clusters()
x <- cluster_infomap(g, E(g)$weight)
x
sizes(x)
?clusters()
c <- cluster_edge_betweenness(g, weights = E(g), directed = TRUE, edc.betweenness=TRUE, merges=TRUE)
c <- cluster_edge_betweenness(g, weights = E(g), directed = TRUE, edc.betweenness=TRUE, merges=TRUE)
c <- cluster_edge_betweenness(g, weights = E(g), directed = TRUE, edc.betweeness=TRUE, merges=TRUE)
c <- cluster_edge_betweenness(g, weights = E(g), directed = TRUE)
sizes(c)
?spinglass.community()
s <- cluster_spinglass(g, weights = E(g)$weight)
sizes(s)
cut_at(s, no=10)
i <- cluster_infomap(g, weights = E(g)$weight)
i <- cluster_infomap(g, e.weights = E(g)$weight)
i
sizes(i)
plot(i, g)
help("cluster_infomap")
help("plot")
i <- cluster_infomap(g, e.weights = E(g)$weight)
str(i)
ugm <- as.undirected(g, "collapse")
MA <- get.adjacency(ugm, attr="weight")
M <- as.matrix(MA)
spc <- specc(M, 10, kernel = "rbfdot")
library(kernlab)
spc <- specc(M, 10, kernel = "rbfdot")
spc
str(spc)
spc.@Data
spc@Data
spc@.Data
plot(igraphDat,
vertex.color = communityEdgeBetwn$membership, vertex.size = log(degree(igraphDat) + 1),
mark.groups = by(seq_along(communityEdgeBetwn$membership), communityEdgeBetwn$membership, invisible))
igraphDat <- g
communityEdgeBetwn$membership = spc@.Data
spc_data = spc@.Data
plot(igraphDat,
vertex.color = spc_data, vertex.size = log(degree(igraphDat) + 1),
mark.groups = by(seq_along(spc_data), spc_data, invisible))
plot(igraphDat,
vertex.color = spc_data, vertex.size = log(degree(igraphDat) + 1),
mark.groups = by(seq_along(spc_data), spc_data, invisible), edge.arrow.mode=0)
x <- V(g)$cx
y <- V(g)$cy
z <- V(g)$cz
coords <- cbind(x,y,z)
plot(igraphDat,
vertex.color = spc_data, vertex.size = log(degree(igraphDat) + 1),
mark.groups = by(seq_along(spc_data), spc_data, invisible), edge.arrow.mode=0, layout = coords[,-3])
plot(igraphDat,
vertex.color = spc_data, vertex.size = log(degree(igraphDat) + 1), edge.arrow.mode=0, layout = coords[,-3])
plot(igraphDat,
vertex.color = spc_data, vertex.size = degree(igraphDat) + 1), edge.arrow.mode=0, layout = coords[,-3])
plot(igraphDat,
vertex.color = spc_data, vertex.size = degree(igraphDat), edge.arrow.mode=0, layout = coords[,-3])
plot(igraphDat,
vertex.color = spc_data, vertex.size = degree(igraphDat) + 10), edge.arrow.mode=0, layout = coords[,-3])
plot(igraphDat,
vertex.color = spc_data, vertex.size = log(degree(igraphDat) + 10), edge.arrow.mode=0, layout = coords[,-3])
plot(igraphDat,
vertex.color = spc_data, vertex.size = log(degree(igraphDat) + 100), edge.arrow.mode=0, layout = coords[,-3])
plot(igraphDat,
vertex.color = spc_data, vertex.size = 5, edge.arrow.mode=0, layout = coords[,-3])
plot(igraphDat,
vertex.color = spc_data, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
membership(spc_data)
membership(spc)
spc_data
table(spc_data)
i
sizes(i)
membership(i)
v <- as.vector(membership(i))
v
spc_data <- v
plot(igraphDat,
vertex.color = spc_data, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
v
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/info_map.R', echo=TRUE)
if(k <= 1) {
)
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/info_map.R', echo=TRUE)
?ccluster_infomap
?cluster_infomap
H
H$h1$rowDendrogram
dd <- H$h1$rowDendrogram
dd
cutree(dd, k=10)
cut_at(dd, no=10)
str(dd)
dd <- as.hclust(dd)
dd
cutree(dd)
cutree(dd, k=10)
obj<-cutree(dd, k=10)
str(obj)
obj<-as.vector(obj)
obj
plot(g,vertex.color = obj, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
g
g <- read.graph("./../../../data/toyData/t_test_controls/CTRL_barbatoa.gml", format="gml")
plot(g,vertex.color = obj, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
x <- V(g)$cx
y <- V(g)$cy
z <- V(g)$cz
coords <- cbind(x,y,z)
plot(g,vertex.color = obj, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
H$h2
H$h2$rowDendrogram
dd <- as.hclust(H$h2$rowDendrogram)
cuttree(dd)
cutree(dd)
cutree(dd, 10)
dd <- cutree(dd, 10)
dd <- ad.vector(dd)
obj <- as.vector(dd)
plot(g,vertex.color = obj, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
obj
plot(g,vertex.color = obj, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
plot(g,vertex.color = obj, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
H
dd
View(coOc_Ptnt)
coOc_Ctrl[1,][1]
m <- coOc_Ctrl[1,][1]
n <- ccoOc_Ctrl/m
n <- coOc_Ctrl/m
n
View(n)
coOc_Ctrl
coOc_Ptnt
m1 <- coOc_Ctrl
m2 <- coOc_Ptnt
mantel.rtest(m1,m2,9000)
d1 <- as.dist(m1)
d2 <- as.dist(m2)
mantel.rtest(d1,d2,9000)
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/info_map.R', echo=TRUE)
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
