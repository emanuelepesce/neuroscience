for(i in 1:100){
spc <- NULL
spc = specc(M, 10, kernel = "rbfdot")
}
spc
spc = specc(M, 10, kernel = "rbfdot")
spc
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
help("tryCatch")
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
library(igraph)
g <- read.graph()
g <- read.graph(file="./../../../data/toyData/t_test_controls/CTRL_amore.gml, format="gml")
g <- read.graph("./../../../data/toyData/t_test_controls/CTRL_amore.gml, format="gml")
g <- read.graph("./../../../data/toyData/t_test_controls/CTRL_amore.gml", format="gml")
g
help(cluster_fast_greedy())
help(cluster_fast_greedy
)
c <- cluster_fast_greedy(g, merges = TRUE, modularity = TRUE, membership = TRUE, weights = E(g)$weight)
c <- cluster_fast_greedy(g, merges = TRUE, modularity = TRUE, membership = TRUE, weights = E(g)$weight)
c <- cluster_edge_betweenness(g, weights = E(g), directed = TRUE, edce.betweenness=TRUE, merges=TRUE)
c <- cluster_edge_betweenness(g, weights = E(g), directed = TRUE)
c
c$vcount
source('~/neuroscience-master/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
library(igraph)
g <- read.graph("./../../../data/toyData/t_test_controls/CTRL_amore.gml", format="gml")
?clusters()
x <- cluster_infomap(g, E(g)$weight)
x
sizes(x)
?clusters()
c <- cluster_edge_betweenness(g, weights = E(g), directed = TRUE, edc.betweenness=TRUE, merges=TRUE)
c <- cluster_edge_betweenness(g, weights = E(g), directed = TRUE, edc.betweenness=TRUE, merges=TRUE)
c <- cluster_edge_betweenness(g, weights = E(g), directed = TRUE, edc.betweeness=TRUE, merges=TRUE)
c <- cluster_edge_betweenness(g, weights = E(g), directed = TRUE)
sizes(c)
?spinglass.community()
s <- cluster_spinglass(g, weights = E(g)$weight)
sizes(s)
cut_at(s, no=10)
i <- cluster_infomap(g, weights = E(g)$weight)
i <- cluster_infomap(g, e.weights = E(g)$weight)
i
sizes(i)
plot(i, g)
help("cluster_infomap")
help("plot")
i <- cluster_infomap(g, e.weights = E(g)$weight)
str(i)
ugm <- as.undirected(g, "collapse")
MA <- get.adjacency(ugm, attr="weight")
M <- as.matrix(MA)
spc <- specc(M, 10, kernel = "rbfdot")
library(kernlab)
spc <- specc(M, 10, kernel = "rbfdot")
spc
str(spc)
spc.@Data
spc@Data
spc@.Data
plot(igraphDat,
vertex.color = communityEdgeBetwn$membership, vertex.size = log(degree(igraphDat) + 1),
mark.groups = by(seq_along(communityEdgeBetwn$membership), communityEdgeBetwn$membership, invisible))
igraphDat <- g
communityEdgeBetwn$membership = spc@.Data
spc_data = spc@.Data
plot(igraphDat,
vertex.color = spc_data, vertex.size = log(degree(igraphDat) + 1),
mark.groups = by(seq_along(spc_data), spc_data, invisible))
plot(igraphDat,
vertex.color = spc_data, vertex.size = log(degree(igraphDat) + 1),
mark.groups = by(seq_along(spc_data), spc_data, invisible), edge.arrow.mode=0)
x <- V(g)$cx
y <- V(g)$cy
z <- V(g)$cz
coords <- cbind(x,y,z)
plot(igraphDat,
vertex.color = spc_data, vertex.size = log(degree(igraphDat) + 1),
mark.groups = by(seq_along(spc_data), spc_data, invisible), edge.arrow.mode=0, layout = coords[,-3])
plot(igraphDat,
vertex.color = spc_data, vertex.size = log(degree(igraphDat) + 1), edge.arrow.mode=0, layout = coords[,-3])
plot(igraphDat,
vertex.color = spc_data, vertex.size = degree(igraphDat) + 1), edge.arrow.mode=0, layout = coords[,-3])
plot(igraphDat,
vertex.color = spc_data, vertex.size = degree(igraphDat), edge.arrow.mode=0, layout = coords[,-3])
plot(igraphDat,
vertex.color = spc_data, vertex.size = degree(igraphDat) + 10), edge.arrow.mode=0, layout = coords[,-3])
plot(igraphDat,
vertex.color = spc_data, vertex.size = log(degree(igraphDat) + 10), edge.arrow.mode=0, layout = coords[,-3])
plot(igraphDat,
vertex.color = spc_data, vertex.size = log(degree(igraphDat) + 100), edge.arrow.mode=0, layout = coords[,-3])
plot(igraphDat,
vertex.color = spc_data, vertex.size = 5, edge.arrow.mode=0, layout = coords[,-3])
plot(igraphDat,
vertex.color = spc_data, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
membership(spc_data)
membership(spc)
spc_data
table(spc_data)
i
sizes(i)
membership(i)
v <- as.vector(membership(i))
v
spc_data <- v
plot(igraphDat,
vertex.color = spc_data, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
v
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/info_map.R', echo=TRUE)
if(k <= 1) {
)
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/info_map.R', echo=TRUE)
?ccluster_infomap
?cluster_infomap
H
H$h1$rowDendrogram
dd <- H$h1$rowDendrogram
dd
cutree(dd, k=10)
cut_at(dd, no=10)
str(dd)
dd <- as.hclust(dd)
dd
cutree(dd)
cutree(dd, k=10)
obj<-cutree(dd, k=10)
str(obj)
obj<-as.vector(obj)
obj
plot(g,vertex.color = obj, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
g
g <- read.graph("./../../../data/toyData/t_test_controls/CTRL_barbatoa.gml", format="gml")
plot(g,vertex.color = obj, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
x <- V(g)$cx
y <- V(g)$cy
z <- V(g)$cz
coords <- cbind(x,y,z)
plot(g,vertex.color = obj, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
H$h2
H$h2$rowDendrogram
dd <- as.hclust(H$h2$rowDendrogram)
cuttree(dd)
cutree(dd)
cutree(dd, 10)
dd <- cutree(dd, 10)
dd <- ad.vector(dd)
obj <- as.vector(dd)
plot(g,vertex.color = obj, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
obj
plot(g,vertex.color = obj, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
plot(g,vertex.color = obj, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
H
dd
View(coOc_Ptnt)
coOc_Ctrl[1,][1]
m <- coOc_Ctrl[1,][1]
n <- ccoOc_Ctrl/m
n <- coOc_Ctrl/m
n
View(n)
coOc_Ctrl
coOc_Ptnt
m1 <- coOc_Ctrl
m2 <- coOc_Ptnt
mantel.rtest(m1,m2,9000)
d1 <- as.dist(m1)
d2 <- as.dist(m2)
mantel.rtest(d1,d2,9000)
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/info_map.R', echo=TRUE)
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
H
H$h1
H$h1$rowDendrogram
dd <- as.hclust(H$h1$rowDendrogram)
c <- cutree(dd, 10)
c
c <- as.vector(c)
c
c
c
plot(g,vertex.color = c, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
library(igraph)
g <- read.graph("./../../../data/toyData/t_test_controls/CTRL_barbatoa.gml", format="gml")
plot(g,vertex.color = c, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
plot(g,vertex.color = c, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
x <- V(g)$cx
y <- V(g)$cy
z <- V(g)$cz
coords <- cbind(x,y,z)
plot(g,vertex.color = c, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
plot(g, vertex.color = c, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
?plot
p <- plot(g, vertex.color = c, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
p
str(p)
g <- read.graph("./../../../data/toyData/t_test_controls/CTRL_barbatog.gml", format="gml")
plot(g, vertex.color = c, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
plot(g, vertex.color = v, vertex.size = 10, edge.arrow.mode = 0, layout = coords[,-2])
plot(g, vertex.color = c, vertex.size = 10, edge.arrow.mode = 0, layout = coords[,-2])
plot(g, vertex.color = c, vertex.size = 10, edge.arrow.mode = 0, layout = coords[,-1])
plot(g, vertex.color = c, vertex.size = 10, edge.arrow.mode = 0, layout = coords[,-3])
help(coords)
library(gplots)
help(coords)
library(ade4)
help(coords)
library(igraph)
plot(g, vertex.color = c, vertex.size = 10, edge.arrow.mode = 0, layout = coords[,-2])
c
table(c)
plot(g, vertex.color = c, vertex.size = 10, edge.arrow.mode = 0, layout = coords[,-3])
coOc_Ctrl
coOc_Ptnt
m1 <- as.distance(coOc_Ctrl)
m1 <- as.dist(coOc_Ctrl)
m2 <- as.dist(coOc_Ptnt)
mantel.rtest(m1, m2, 9000)
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/info_map.R', echo=TRUE)
mantel.rtest(m1, m2, 9000)
coOc_Ptnt
View(coOccurrence)
View(makeHeatmap)
View(makeHeatmap)
?heatmap.2
grepl(cfile, pattern = "*.gml")
grepl("./../../../data/toyData/t_test_controls/", pattern = "*.gml")
grepl("./../../../data/toyData/t_test_controls/", pattern = "*.gml")
grepl("./../../../data/toyData/t_test_controls/", pattern = "*.gml")
files <- list.files("./../../../data/toyData/t_test_controls/")
grepl(files, pattern = "*.gml")
v <- grepl(files, pattern = "*.gml")
which(v == TRUE)
f <- which(v == TRUE)
f
f[1]
files[f[1]]
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
debugSource('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
g <- read.graph(paste(pathIn, cfile, sep=""), format="gml") # get the graph from the file
dendro <- as.hclust(h$rowDendrogram)
c <- cutree(dd, k)
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
debugSource('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
dendro <- as.hclust(h$rowDendrogram)
dendro
dendro <- as.hclust(h$rowDendrogram)
h
debugSource('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
h
dendro <- as.hclust(h$rowDendrogram)
dendro
c <- cutree(dendro, k)
v <- as.vector(c)
x <- V(g)$cx
y <- V(g)$cy
z <- V(g)$cz
coords <- cbind(x,y,z)
jpeg(filename=paste(pathOut, "graph_x_y", sep=""), width = 1000, height = 1000)
plot(g, vertex.color = v, vertex.size = 10, edge.arrow.mode = 0, layout = coords[,-3])
dev.off()
H <- makeHeatmap(coOc_Ctrl, coOc_Ptnt, pathOutResults)
plotF(H$h1, 10, pathInC, pathOutResults, FALSE)
plotF(H$h2, 10, pathInP, pathOutResults, FALSE)
plotF(H$h1, 10, pathInC, pathOutResults, FALSE)
plotF(H$h2, 10, pathInP, pathOutResults, FALSE)
etime <- stime - proc.time()
debugSource('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
c
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
debugSource('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
dendro <- as.hclust(h$rowDendrogram)
c <- cutree(dendro, k)
v <- as.vector(c)
dendro
x <- V(g)$cx
y <- V(g)$cy
z <- V(g)$cz
coords <- cbind(x,y,z)
jpeg(filename=paste(pathOut, "graph_x_y", sep=""), width = 1000, height = 1000)
plot(g, vertex.color = v, vertex.size = 10, edge.arrow.mode = 0, layout = coords[,-3])
dev.off()
}
# Perform the mantel test on m1 and m2 with bootstrap 9000 as default
mantel_test <- function(m1, m2, b = 9000) {
d1 <- as.dist(coOc_Ctrl)
d2 <- as.dist(coOc_Ptnt)
m <- mantel.rtest(d1, d2, b)
return(m)
}
if(interactive()) {
stime <- proc.time()
################################################ cutted #########################################################
pathInC = "./../../../data/toyData/cutted_controls/"
pathInP = "./../../../data/toyData/cutted_patients/"
pathOutC = "./../../../data/toyData/results/3_community_spectral/cutted/membership_controls.csv"
pathOutP = "./../../../data/toyData/results/3_community_spectral/cutted/membership_patients.csv"
pathOutResults = "./../../../data/toyData/results/3_community_spectral/cutted/"
controls <- performingCommunityDetection(pathInC, pathOutC)
patient <- performingCommunityDetection(pathInP, pathOutP)
coOc_Ctrl <- coOccurrence(pathOutC)
coOc_Ptnt <- coOccurrence(pathOutP)
#m <- mantel_test(coOc_Ctrl, coOc_Ptnt, 9000)
H <- makeHeatmap(coOc_Ctrl, coOc_Ptnt, pathOutResults)
################################################ plot cutted #######################################################
plotF(H$h1, 10, pathInC, pathOutResults, FALSE)
plotF(H$h2, 10, pathInP, pathOutResults, FALSE)
#   ################################################### t test ##########################################################
pathInC = "./../../../data/toyData/t_test_controls/"
pathInP = "./../../../data/toyData/t_test_patients/"
pathOutC = "./../../../data/toyData/results/3_community_spectral/t_test_cutted/membership_controls.csv"
pathOutP = "./../../../data/toyData/results/3_community_spectral/t_test_cutted/membership_patients.csv"
pathOutResults = "./../../../data/toyData/results/3_community_spectral/t_test_cutted/"
controls <- performingCommunityDetection(pathInC, pathOutC)
patient <- performingCommunityDetection(pathInP, pathOutP)
coOc_Ctrl <- coOccurrence(pathOutC)
coOc_Ptnt <- coOccurrence(pathOutP)
#    m <- mantel_test(coOc_Ctrl, coOc_Ptnt, 9000)
H <- makeHeatmap(coOc_Ctrl, coOc_Ptnt, pathOutResults)
#   ################################################# plot t test #######################################################
plotF(H$h1, 10, pathInC, pathOutResults, FALSE)
plotF(H$h2, 10, pathInP, pathOutResults, FALSE)
################################################# t test MST ########################################################
pathInC = "./../../../data/toyData/t_test_MST_controls/"
pathInP = "./../../../data/toyData/t_test_MST_patients/"
pathOutC = "./../../../data/toyData/results/3_community_spectral/t_test_MST/membership_controls.csv"
pathOutP = "./../../../data/toyData/results/3_community_spectral/t_test_MST/membership_patients.csv"
pathOutResults = "./../../../data/toyData/results/3_community_spectral/t_test_MST/"
controls <- performingCommunityDetection(pathInC, pathOutC)
patient <- performingCommunityDetection(pathInP, pathOutP)
coOc_Ctrl <- coOccurrence(pathOutC)
coOc_Ptnt <- coOccurrence(pathOutP)
#    m <- mantel_test(coOc_Ctrl, coOc_Ptnt, 9000)
H <- makeHeatmap(coOc_Ctrl, coOc_Ptnt, pathOutResults)
################################################ plot t test MST ###################################################
plotF(H$h1, 10, pathInC, pathOutResults, FALSE)
plotF(H$h2, 10, pathInP, pathOutResults, FALSE)
#####################################################################################################################
etime <- stime - proc.time()
}
#plot(igraphDat,vertex.color = spc_data, vertex.size = 10, edge.arrow.mode=0, layout = coords[,-3])
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
debugSource('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
debugSource('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
debugSource('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
debugSource('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
Q
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
plotF(H$h1, 10, pathInC, pathOutResults, FALSE)
H$h1
h <- H$h1
h$rowDendrogram
dendro <- as.hclust(h$rowDendrogram)
dendro <- as.hclust(h$colDendrogram)
dendro <- as.dendrogram(h$colDendrogram)
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
debugSource('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
dendro
dendro <- as.dendrogram(h$rowDendrogram)
dendro
cutree(dendro)
cutree(dendro, k 10)
cutree(dendro, k =10)
str(dendrto)
str(dendro)
plot(dendro)
cut_at(dendro)
cutree(dendro, h = 10)
cutree(as.hclust(dendro), h = 10)
cutree(as.hclust(dendro), k = 10)
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
debugSource('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
dendro <- as.dendrogram(h$rowDendrogram)
c <- cutree(as.hclust(dendro), k)
h
H
h <- H$h1
dendro <- as.dendrogram(h$rowDendrogram)
c <- cutree(as.hclust(dendro), k)
h
cutree(h, k=10)
cutree(as.hclust(h), k=10)
h
plot(h)
h
h <- H$h1$rowDendrogram
plot(h)
cutree(h, k = 10)
cutree(as.hclust(h), k = 10)
dendro <- as.dendrogram(h)
cutree(dendro, k = 10)
cutree(as.hclust(dendro), k = 10)
cut.dendrogram(as.hclust(dendro),h = 300)
h <- H$h1$rowDendrogram
h
h<- as.dendrogram(h)
h
c <- cutree(as.hclust(h), 10)
plot(h)
c <- cutree(as.hclust(h), k=10)
h<- as.dendrogram(h, scale ='none')
h
c <- cutree(h, 10)
h
h <- H$h1$colDendrogram
h
plot(h)
plot(1:5)
plot(h)
cutree(h)
cutree(h, k = 5)
cutree(as.hclust(h), k = 5)
debugSource('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
H
plot(H$h1)
debugSource('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
h
hc <- h$rowDendrogram
hc <- as.dendrogram.default(hc)
hc <- as.hclust.default(hc)
hc <- as.hclust(hc)
hc
plot(h)
plot(hc)
coOc_Ctrl
dist(t(coOc_Ctrl))
a <- (t(coOc_Ctrl))
a <- dist(t(coOc_Ctrl))
a
a <- dist(t(coOc_Ctrl))
hhp <- hclust(a)
plot(hhp)
h1
h
str(h)
h$rowInd
h$colDendrogram
h1 <- h$colDendrogram
plot(h1)
cutree(h1)
cutree(as.dendrogram(h1))
cutree(as.hclust(h1))
cutree(as.hclust(h1), k = 10)
h1
as-hclust(h1)
as.hclust(h1)
h1
plotF(H$h2, 10, pathInP, pathOutResults, FALSE)
debugSource('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
dendro <- as.dendrogram(h$rowDendrogram)
c <- cutree(as.hclust(dendro), k)
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
plotF(H$h1, 10, "./../../../data/toyData/cutted_controls/", "./../../../data/toyData/results/3_community_spectral/cutted/", FALSE)
H <- makeHeatmap(coOc_Ctrl, coOc_Ptnt, pathOutResults)
pathInC = "./../../../data/toyData/cutted_controls/"
pathInP = "./../../../data/toyData/cutted_patients/"
pathOutC = "./../../../data/toyData/results/3_community_spectral/cutted/membership_controls.csv"
pathOutP = "./../../../data/toyData/results/3_community_spectral/cutted/membership_patients.csv"
pathOutResults = "./../../../data/toyData/results/3_community_spectral/cutted/"
controls <- performingCommunityDetection(pathInC, pathOutC)
patient <- performingCommunityDetection(pathInP, pathOutP)
coOc_Ctrl <- coOccurrence(pathOutC)
coOc_Ptnt <- coOccurrence(pathOutP)
H <- makeHeatmap(coOc_Ctrl, coOc_Ptnt, pathOutResults)
plotF(H$h1, 10, pathInC, pathOutResults, FALSE)
plotF(H$h2, 10, pathInP, pathOutResults, FALSE)
pathInC = "./../../../data/toyData/t_test_controls/"
pathInP = "./../../../data/toyData/t_test_patients/"
pathOutC = "./../../../data/toyData/results/3_community_spectral/t_test_cutted/membership_controls.csv"
pathOutP = "./../../../data/toyData/results/3_community_spectral/t_test_cutted/membership_patients.csv"
pathOutResults = "./../../../data/toyData/results/3_community_spectral/t_test_cutted/"
controls <- performingCommunityDetection(pathInC, pathOutC)
patient <- performingCommunityDetection(pathInP, pathOutP)
coOc_Ctrl <- coOccurrence(pathOutC)
coOc_Ptnt <- coOccurrence(pathOutP)
H <- makeHeatmap(coOc_Ctrl, coOc_Ptnt, pathOutResults)
plotF(H$h1, 10, pathInC, pathOutResults, FALSE)
plotF(H$h2, 10, pathInP, pathOutResults, FALSE)
controls
coOc_Ctrl
View(coOc_Ctrl)
files <- list.files(path = pathIn)
files <- list.files(pathInC)
valid <- grepl(files, pattern = "*.gml")
valid <- which(valid == TRUE)
cfile <- files[valid[1]]
g <- read.graph(paste(pathIn, cfile, sep=""), format="gml") # get the graph from the file
g <- read.graph(paste(pathInC, cfile, sep=""), format="gml") # get the graph from the file
dendro <- as.dendrogram(h$rowDendrogram)
dendro <- as.dendrogram(H$h1$rowDendrogram)
c <- cutree(as.hclust(dendro), k)
c <- cutree(dendro, k)
source('~/Scrivania/neuroscience/neuroscience/source/R/communitySpectral/comm_spectral.R', echo=TRUE)
g
pathInC = "./../../../data/toyData/t_test_MST_controls/"
pathInC = "./../../../data/toyData/t_test_MST_controls/CTRL_amore.gml"
a <-read.graph(pathInC, format="gml")
V(a)[35]$area
